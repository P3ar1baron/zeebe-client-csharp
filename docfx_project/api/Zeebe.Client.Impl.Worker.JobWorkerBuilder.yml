### YamlMime:ManagedReference
items:
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  commentId: T:Zeebe.Client.Impl.Worker.JobWorkerBuilder
  id: JobWorkerBuilder
  parent: Zeebe.Client.Impl.Worker
  children:
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.#ctor(Gateway.GatewayClient,IJobClient,ILoggerFactory)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(IList{System.String})
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(System.String[])
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler(JobHandler)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType(System.String)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive(System.Int32)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name(System.String)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout(TimeSpan)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval(TimeSpan)
  - Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout(TimeSpan)
  langs:
  - csharp
  - vb
  name: JobWorkerBuilder
  nameWithType: JobWorkerBuilder
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  type: Class
  source:
    id: JobWorkerBuilder
    path: ''
    startLine: 9114
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: 'public class JobWorkerBuilder : IJobWorkerBuilderStep1, IJobWorkerBuilderStep2, IJobWorkerBuilderStep3'
    content.vb: >-
      Public Class JobWorkerBuilder
          Inherits IJobWorkerBuilderStep1
          Implements IJobWorkerBuilderStep2, IJobWorkerBuilderStep3
  inheritance:
  - System.Object
  implements:
  - IJobWorkerBuilderStep2
  - IJobWorkerBuilderStep3
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.#ctor(Gateway.GatewayClient,IJobClient,ILoggerFactory)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.#ctor(Gateway.GatewayClient,IJobClient,ILoggerFactory)
  id: '#ctor(Gateway.GatewayClient,IJobClient,ILoggerFactory)'
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: JobWorkerBuilder(Gateway.GatewayClient, IJobClient, ILoggerFactory)
  nameWithType: JobWorkerBuilder.JobWorkerBuilder(Gateway.GatewayClient, IJobClient, ILoggerFactory)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobWorkerBuilder(Gateway.GatewayClient, IJobClient, ILoggerFactory)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 9125
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public JobWorkerBuilder(Gateway.GatewayClient client, IJobClient jobClient, ILoggerFactory loggerFactory = null)
    parameters:
    - id: client
      type: Gateway.GatewayClient
    - id: jobClient
      type: IJobClient
    - id: loggerFactory
      type: ILoggerFactory
    content.vb: Public Sub New(client As Gateway.GatewayClient, jobClient As IJobClient, loggerFactory As ILoggerFactory = Nothing)
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType(System.String)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType(System.String)
  id: JobType(System.String)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: JobType(String)
  nameWithType: JobWorkerBuilder.JobType(String)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType(System.String)
  type: Method
  source:
    id: JobType
    path: ''
    startLine: 9135
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep2 JobType(string type)
    parameters:
    - id: type
      type: System.String
    return:
      type: IJobWorkerBuilderStep2
    content.vb: Public Function JobType(type As String) As IJobWorkerBuilderStep2
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler(JobHandler)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler(JobHandler)
  id: Handler(JobHandler)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: Handler(JobHandler)
  nameWithType: JobWorkerBuilder.Handler(JobHandler)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler(JobHandler)
  type: Method
  source:
    id: Handler
    path: ''
    startLine: 9141
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 Handler(JobHandler handler)
    parameters:
    - id: handler
      type: JobHandler
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function Handler(handler As JobHandler) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout(TimeSpan)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout(TimeSpan)
  id: Timeout(TimeSpan)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: Timeout(TimeSpan)
  nameWithType: JobWorkerBuilder.Timeout(TimeSpan)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout(TimeSpan)
  type: Method
  source:
    id: Timeout
    path: ''
    startLine: 9152
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 Timeout(TimeSpan timeout)
    parameters:
    - id: timeout
      type: TimeSpan
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function Timeout(timeout As TimeSpan) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name(System.String)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name(System.String)
  id: Name(System.String)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: Name(String)
  nameWithType: JobWorkerBuilder.Name(String)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name(System.String)
  type: Method
  source:
    id: Name
    path: ''
    startLine: 9158
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 Name(string workerName)
    parameters:
    - id: workerName
      type: System.String
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function Name(workerName As String) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive(System.Int32)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive(System.Int32)
  id: MaxJobsActive(System.Int32)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: MaxJobsActive(Int32)
  nameWithType: JobWorkerBuilder.MaxJobsActive(Int32)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive(System.Int32)
  type: Method
  source:
    id: MaxJobsActive
    path: ''
    startLine: 9164
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 MaxJobsActive(int maxJobsActive)
    parameters:
    - id: maxJobsActive
      type: System.Int32
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function MaxJobsActive(maxJobsActive As Integer) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(IList{System.String})
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(IList{System.String})
  id: FetchVariables(IList{System.String})
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: FetchVariables(IList<String>)
  nameWithType: JobWorkerBuilder.FetchVariables(IList<String>)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(IList<System.String>)
  type: Method
  source:
    id: FetchVariables
    path: ''
    startLine: 9170
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 FetchVariables(IList<string> fetchVariables)
    parameters:
    - id: fetchVariables
      type: IList{System.String}
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function FetchVariables(fetchVariables As IList(Of String)) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables*
  nameWithType.vb: JobWorkerBuilder.FetchVariables(IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(IList(Of System.String))
  name.vb: FetchVariables(IList(Of String))
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(System.String[])
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(System.String[])
  id: FetchVariables(System.String[])
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: FetchVariables(String[])
  nameWithType: JobWorkerBuilder.FetchVariables(String[])
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(System.String[])
  type: Method
  source:
    id: FetchVariables
    path: ''
    startLine: 9176
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 FetchVariables(params string[] fetchVariables)
    parameters:
    - id: fetchVariables
      type: System.String[]
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function FetchVariables(ParamArray fetchVariables As String()) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables*
  nameWithType.vb: JobWorkerBuilder.FetchVariables(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables(System.String())
  name.vb: FetchVariables(String())
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval(TimeSpan)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval(TimeSpan)
  id: PollInterval(TimeSpan)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: PollInterval(TimeSpan)
  nameWithType: JobWorkerBuilder.PollInterval(TimeSpan)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval(TimeSpan)
  type: Method
  source:
    id: PollInterval
    path: ''
    startLine: 9182
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 PollInterval(TimeSpan pollInterval)
    parameters:
    - id: pollInterval
      type: TimeSpan
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function PollInterval(pollInterval As TimeSpan) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout(TimeSpan)
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout(TimeSpan)
  id: PollingTimeout(TimeSpan)
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: PollingTimeout(TimeSpan)
  nameWithType: JobWorkerBuilder.PollingTimeout(TimeSpan)
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout(TimeSpan)
  type: Method
  source:
    id: PollingTimeout
    path: ''
    startLine: 9193
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 PollingTimeout(TimeSpan pollingTimeout)
    parameters:
    - id: pollingTimeout
      type: TimeSpan
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function PollingTimeout(pollingTimeout As TimeSpan) As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion
  id: AutoCompletion
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: AutoCompletion()
  nameWithType: JobWorkerBuilder.AutoCompletion()
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion()
  type: Method
  source:
    id: AutoCompletion
    path: ''
    startLine: 9199
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorkerBuilderStep3 AutoCompletion()
    return:
      type: IJobWorkerBuilderStep3
    content.vb: Public Function AutoCompletion As IJobWorkerBuilderStep3
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open
  commentId: M:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open
  id: Open
  parent: Zeebe.Client.Impl.Worker.JobWorkerBuilder
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: JobWorkerBuilder.Open()
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open()
  type: Method
  source:
    id: Open
    path: ''
    startLine: 9210
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Impl.Worker
  syntax:
    content: public IJobWorker Open()
    return:
      type: IJobWorker
    content.vb: Public Function Open As IJobWorker
  overload: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Zeebe.Client.Impl.Worker
  commentId: N:Zeebe.Client.Impl.Worker
  name: Zeebe.Client.Impl.Worker
  nameWithType: Zeebe.Client.Impl.Worker
  fullName: Zeebe.Client.Impl.Worker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IJobWorkerBuilderStep2
  isExternal: true
  name: IJobWorkerBuilderStep2
  nameWithType: IJobWorkerBuilderStep2
  fullName: IJobWorkerBuilderStep2
- uid: IJobWorkerBuilderStep3
  isExternal: true
  name: IJobWorkerBuilderStep3
  nameWithType: IJobWorkerBuilderStep3
  fullName: IJobWorkerBuilderStep3
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.#ctor*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.#ctor
  name: JobWorkerBuilder
  nameWithType: JobWorkerBuilder.JobWorkerBuilder
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobWorkerBuilder
- uid: Gateway.GatewayClient
  isExternal: true
  name: Gateway.GatewayClient
  nameWithType: Gateway.GatewayClient
  fullName: Gateway.GatewayClient
- uid: IJobClient
  isExternal: true
  name: IJobClient
  nameWithType: IJobClient
  fullName: IJobClient
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType
  name: JobType
  nameWithType: JobWorkerBuilder.JobType
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.JobType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler
  name: Handler
  nameWithType: JobWorkerBuilder.Handler
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Handler
- uid: JobHandler
  commentId: '!:JobHandler'
  isExternal: true
  name: JobHandler
  nameWithType: JobHandler
  fullName: JobHandler
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout
  name: Timeout
  nameWithType: JobWorkerBuilder.Timeout
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Timeout
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name
  name: Name
  nameWithType: JobWorkerBuilder.Name
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Name
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive
  name: MaxJobsActive
  nameWithType: JobWorkerBuilder.MaxJobsActive
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.MaxJobsActive
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables
  name: FetchVariables
  nameWithType: JobWorkerBuilder.FetchVariables
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.FetchVariables
- uid: IList{System.String}
  commentId: '!:IList{System.String}'
  definition: IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval
  name: PollInterval
  nameWithType: JobWorkerBuilder.PollInterval
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollInterval
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout
  name: PollingTimeout
  nameWithType: JobWorkerBuilder.PollingTimeout
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.PollingTimeout
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion
  name: AutoCompletion
  nameWithType: JobWorkerBuilder.AutoCompletion
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.AutoCompletion
- uid: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open*
  commentId: Overload:Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open
  name: Open
  nameWithType: JobWorkerBuilder.Open
  fullName: Zeebe.Client.Impl.Worker.JobWorkerBuilder.Open
- uid: IJobWorker
  commentId: '!:IJobWorker'
  isExternal: true
  name: IJobWorker
  nameWithType: IJobWorker
  fullName: IJobWorker
