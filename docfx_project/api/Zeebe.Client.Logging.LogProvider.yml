### YamlMime:ManagedReference
items:
- uid: Zeebe.Client.Logging.LogProvider
  commentId: T:Zeebe.Client.Logging.LogProvider
  id: LogProvider
  parent: Zeebe.Client.Logging
  children:
  - Zeebe.Client.Logging.LogProvider.IsDisabled
  - Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider(Zeebe.Client.Logging.ILogProvider)
  langs:
  - csharp
  - vb
  name: LogProvider
  nameWithType: LogProvider
  fullName: Zeebe.Client.Logging.LogProvider
  type: Class
  source:
    id: LogProvider
    path: ''
    startLine: 10859
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Logging
  summary: "\nProvides a mechanism to create instances of <xref href=\"Zeebe.Client.Logging.ILog\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public static class LogProvider
    content.vb: Public Module LogProvider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider(Zeebe.Client.Logging.ILogProvider)
  commentId: M:Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider(Zeebe.Client.Logging.ILogProvider)
  id: SetCurrentLogProvider(Zeebe.Client.Logging.ILogProvider)
  parent: Zeebe.Client.Logging.LogProvider
  langs:
  - csharp
  - vb
  name: SetCurrentLogProvider(ILogProvider)
  nameWithType: LogProvider.SetCurrentLogProvider(ILogProvider)
  fullName: Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider(Zeebe.Client.Logging.ILogProvider)
  type: Method
  source:
    id: SetCurrentLogProvider
    path: ''
    startLine: 10878
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Logging
  summary: "\nSets the current log provider.\n"
  example: []
  syntax:
    content: public static void SetCurrentLogProvider(ILogProvider logProvider)
    parameters:
    - id: logProvider
      type: Zeebe.Client.Logging.ILogProvider
      description: The log provider.
    content.vb: Public Shared Sub SetCurrentLogProvider(logProvider As ILogProvider)
  overload: Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Zeebe.Client.Logging.LogProvider.IsDisabled
  commentId: P:Zeebe.Client.Logging.LogProvider.IsDisabled
  id: IsDisabled
  parent: Zeebe.Client.Logging.LogProvider
  langs:
  - csharp
  - vb
  name: IsDisabled
  nameWithType: LogProvider.IsDisabled
  fullName: Zeebe.Client.Logging.LogProvider.IsDisabled
  type: Property
  source:
    id: IsDisabled
    path: ''
    startLine: 10891
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Logging
  summary: "\nGets or sets a value indicating whether this is logging is disabled.\n"
  example: []
  syntax:
    content: public static bool IsDisabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if logging is disabled; otherwise, <code>false</code>.\n"
    content.vb: Public Shared Property IsDisabled As Boolean
  overload: Zeebe.Client.Logging.LogProvider.IsDisabled*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Zeebe.Client.Logging.ILog
  commentId: T:Zeebe.Client.Logging.ILog
  isExternal: true
- uid: Zeebe.Client.Logging
  commentId: N:Zeebe.Client.Logging
  name: Zeebe.Client.Logging
  nameWithType: Zeebe.Client.Logging
  fullName: Zeebe.Client.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider*
  commentId: Overload:Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider
  name: SetCurrentLogProvider
  nameWithType: LogProvider.SetCurrentLogProvider
  fullName: Zeebe.Client.Logging.LogProvider.SetCurrentLogProvider
- uid: Zeebe.Client.Logging.ILogProvider
  commentId: T:Zeebe.Client.Logging.ILogProvider
  parent: Zeebe.Client.Logging
  name: ILogProvider
  nameWithType: ILogProvider
  fullName: Zeebe.Client.Logging.ILogProvider
- uid: Zeebe.Client.Logging.LogProvider.IsDisabled*
  commentId: Overload:Zeebe.Client.Logging.LogProvider.IsDisabled
  name: IsDisabled
  nameWithType: LogProvider.IsDisabled
  fullName: Zeebe.Client.Logging.LogProvider.IsDisabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
