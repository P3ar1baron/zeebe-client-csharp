### YamlMime:ManagedReference
items:
- uid: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  commentId: T:Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  id: ICreateWorkflowInstanceWithResultCommandStep1
  parent: Zeebe.Client.Api.Commands
  children:
  - Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList{System.String})
  - Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(System.String[])
  langs:
  - csharp
  - vb
  name: ICreateWorkflowInstanceWithResultCommandStep1
  nameWithType: ICreateWorkflowInstanceWithResultCommandStep1
  fullName: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  type: Interface
  source:
    id: ICreateWorkflowInstanceWithResultCommandStep1
    path: ''
    startLine: 1180
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Api.Commands
  syntax:
    content: 'public interface ICreateWorkflowInstanceWithResultCommandStep1 : IFinalCommandStep<IWorkflowInstanceResult>'
    content.vb: >-
      Public Interface ICreateWorkflowInstanceWithResultCommandStep1
          Inherits IFinalCommandStep(Of IWorkflowInstanceResult)
  inheritedMembers:
  - Zeebe.Client.Api.Commands.IFinalCommandStep{IWorkflowInstanceResult}.Send(System.Nullable{TimeSpan})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList{System.String})
  commentId: M:Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList{System.String})
  id: FetchVariables(IList{System.String})
  parent: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  langs:
  - csharp
  - vb
  name: FetchVariables(IList<String>)
  nameWithType: ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList<String>)
  fullName: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList<System.String>)
  type: Method
  source:
    id: FetchVariables
    path: ''
    startLine: 1188
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Api.Commands
  summary: "\nSet a list of variables names which should be fetched in the response.\n"
  example: []
  syntax:
    content: ICreateWorkflowInstanceWithResultCommandStep1 FetchVariables(IList<string> fetchVariables)
    parameters:
    - id: fetchVariables
      type: IList{System.String}
      description: set of names of variables to be included in the response
    return:
      type: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
      description: the builder for this command. Call <see cref="!:IFinalCommandStep.Send"></see> to complete the command and send it to the broker
    content.vb: Function FetchVariables(fetchVariables As IList(Of String)) As ICreateWorkflowInstanceWithResultCommandStep1
  overload: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables*
  nameWithType.vb: ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList(Of String))
  fullName.vb: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(IList(Of System.String))
  name.vb: FetchVariables(IList(Of String))
- uid: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(System.String[])
  commentId: M:Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(System.String[])
  id: FetchVariables(System.String[])
  parent: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  langs:
  - csharp
  - vb
  name: FetchVariables(String[])
  nameWithType: ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(String[])
  fullName: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(System.String[])
  type: Method
  source:
    id: FetchVariables
    path: ''
    startLine: 1195
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Api.Commands
  syntax:
    content: ICreateWorkflowInstanceWithResultCommandStep1 FetchVariables(params string[] fetchVariables)
    parameters:
    - id: fetchVariables
      type: System.String[]
    return:
      type: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
    content.vb: Function FetchVariables(ParamArray fetchVariables As String()) As ICreateWorkflowInstanceWithResultCommandStep1
  overload: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables*
  nameWithType.vb: ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(String())
  fullName.vb: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables(System.String())
  name.vb: FetchVariables(String())
references:
- uid: Zeebe.Client.Api.Commands
  commentId: N:Zeebe.Client.Api.Commands
  name: Zeebe.Client.Api.Commands
  nameWithType: Zeebe.Client.Api.Commands
  fullName: Zeebe.Client.Api.Commands
- uid: Zeebe.Client.Api.Commands.IFinalCommandStep{IWorkflowInstanceResult}.Send(System.Nullable{TimeSpan})
  commentId: M:Zeebe.Client.Api.Commands.IFinalCommandStep{IWorkflowInstanceResult}.Send(System.Nullable{TimeSpan})
  parent: Zeebe.Client.Api.Commands.IFinalCommandStep{IWorkflowInstanceResult}
  definition: Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
  name: Send(Nullable<TimeSpan>)
  nameWithType: IFinalCommandStep<IWorkflowInstanceResult>.Send(Nullable<TimeSpan>)
  fullName: Zeebe.Client.Api.Commands.IFinalCommandStep<IWorkflowInstanceResult>.Send(System.Nullable<TimeSpan>)
  nameWithType.vb: IFinalCommandStep(Of IWorkflowInstanceResult).Send(Nullable(Of TimeSpan))
  fullName.vb: Zeebe.Client.Api.Commands.IFinalCommandStep(Of IWorkflowInstanceResult).Send(System.Nullable(Of TimeSpan))
  name.vb: Send(Nullable(Of TimeSpan))
  spec.csharp:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
    name: Send
    nameWithType: IFinalCommandStep<IWorkflowInstanceResult>.Send
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep<IWorkflowInstanceResult>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
    name: Send
    nameWithType: IFinalCommandStep(Of IWorkflowInstanceResult).Send
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep(Of IWorkflowInstanceResult).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
  commentId: M:Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
  isExternal: true
  name: Send(Nullable<TimeSpan>)
  nameWithType: IFinalCommandStep<T>.Send(Nullable<TimeSpan>)
  fullName: Zeebe.Client.Api.Commands.IFinalCommandStep<T>.Send(System.Nullable<TimeSpan>)
  nameWithType.vb: IFinalCommandStep(Of T).Send(Nullable(Of TimeSpan))
  fullName.vb: Zeebe.Client.Api.Commands.IFinalCommandStep(Of T).Send(System.Nullable(Of TimeSpan))
  name.vb: Send(Nullable(Of TimeSpan))
  spec.csharp:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
    name: Send
    nameWithType: IFinalCommandStep<T>.Send
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep<T>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1.Send(System.Nullable{TimeSpan})
    name: Send
    nameWithType: IFinalCommandStep(Of T).Send
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep(Of T).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Zeebe.Client.Api.Commands.IFinalCommandStep{IWorkflowInstanceResult}
  commentId: T:Zeebe.Client.Api.Commands.IFinalCommandStep{IWorkflowInstanceResult}
  parent: Zeebe.Client.Api.Commands
  definition: Zeebe.Client.Api.Commands.IFinalCommandStep`1
  name: IFinalCommandStep<IWorkflowInstanceResult>
  nameWithType: IFinalCommandStep<IWorkflowInstanceResult>
  fullName: Zeebe.Client.Api.Commands.IFinalCommandStep<IWorkflowInstanceResult>
  nameWithType.vb: IFinalCommandStep(Of IWorkflowInstanceResult)
  fullName.vb: Zeebe.Client.Api.Commands.IFinalCommandStep(Of IWorkflowInstanceResult)
  name.vb: IFinalCommandStep(Of IWorkflowInstanceResult)
  spec.csharp:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1
    name: IFinalCommandStep
    nameWithType: IFinalCommandStep
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep
  - name: <
    nameWithType: <
    fullName: <
  - uid: IWorkflowInstanceResult
    name: IWorkflowInstanceResult
    nameWithType: IWorkflowInstanceResult
    fullName: IWorkflowInstanceResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1
    name: IFinalCommandStep
    nameWithType: IFinalCommandStep
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IWorkflowInstanceResult
    name: IWorkflowInstanceResult
    nameWithType: IWorkflowInstanceResult
    fullName: IWorkflowInstanceResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1
  commentId: T:Zeebe.Client.Api.Commands.IFinalCommandStep`1
  name: IFinalCommandStep<T>
  nameWithType: IFinalCommandStep<T>
  fullName: Zeebe.Client.Api.Commands.IFinalCommandStep<T>
  nameWithType.vb: IFinalCommandStep(Of T)
  fullName.vb: Zeebe.Client.Api.Commands.IFinalCommandStep(Of T)
  name.vb: IFinalCommandStep(Of T)
  spec.csharp:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1
    name: IFinalCommandStep
    nameWithType: IFinalCommandStep
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Zeebe.Client.Api.Commands.IFinalCommandStep`1
    name: IFinalCommandStep
    nameWithType: IFinalCommandStep
    fullName: Zeebe.Client.Api.Commands.IFinalCommandStep
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables*
  commentId: Overload:Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables
  name: FetchVariables
  nameWithType: ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables
  fullName: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1.FetchVariables
- uid: IList{System.String}
  commentId: '!:IList{System.String}'
  definition: IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  commentId: T:Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
  parent: Zeebe.Client.Api.Commands
  name: ICreateWorkflowInstanceWithResultCommandStep1
  nameWithType: ICreateWorkflowInstanceWithResultCommandStep1
  fullName: Zeebe.Client.Api.Commands.ICreateWorkflowInstanceWithResultCommandStep1
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
