### YamlMime:ManagedReference
items:
- uid: Zeebe.Client.Api.Responses.IActivateJobsResponse
  commentId: T:Zeebe.Client.Api.Responses.IActivateJobsResponse
  id: IActivateJobsResponse
  parent: Zeebe.Client.Api.Responses
  children:
  - Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs
  langs:
  - csharp
  - vb
  name: IActivateJobsResponse
  nameWithType: IActivateJobsResponse
  fullName: Zeebe.Client.Api.Responses.IActivateJobsResponse
  type: Interface
  source:
    id: IActivateJobsResponse
    path: ''
    startLine: 908
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Api.Responses
  syntax:
    content: public interface IActivateJobsResponse
    content.vb: Public Interface IActivateJobsResponse
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs
  commentId: P:Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs
  id: Jobs
  parent: Zeebe.Client.Api.Responses.IActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Jobs
  nameWithType: IActivateJobsResponse.Jobs
  fullName: Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs
  type: Property
  source:
    id: Jobs
    path: ''
    startLine: 913
  assemblies:
  - cs.temp.dll
  namespace: Zeebe.Client.Api.Responses
  example: []
  syntax:
    content: IList<IJob> Jobs { get; }
    parameters: []
    return:
      type: IList{Zeebe.Client.Api.Responses.IJob}
      description: "\nthe list of activated jobs\n"
    content.vb: ReadOnly Property Jobs As IList(Of IJob)
  overload: Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Zeebe.Client.Api.Responses
  commentId: N:Zeebe.Client.Api.Responses
  name: Zeebe.Client.Api.Responses
  nameWithType: Zeebe.Client.Api.Responses
  fullName: Zeebe.Client.Api.Responses
- uid: Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs*
  commentId: Overload:Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs
  name: Jobs
  nameWithType: IActivateJobsResponse.Jobs
  fullName: Zeebe.Client.Api.Responses.IActivateJobsResponse.Jobs
- uid: IList{Zeebe.Client.Api.Responses.IJob}
  commentId: '!:IList{Zeebe.Client.Api.Responses.IJob}'
  definition: IList`1
  name: IList<IJob>
  nameWithType: IList<IJob>
  fullName: IList<Zeebe.Client.Api.Responses.IJob>
  nameWithType.vb: IList(Of IJob)
  fullName.vb: IList(Of Zeebe.Client.Api.Responses.IJob)
  name.vb: IList(Of IJob)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Zeebe.Client.Api.Responses.IJob
    name: IJob
    nameWithType: IJob
    fullName: Zeebe.Client.Api.Responses.IJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Zeebe.Client.Api.Responses.IJob
    name: IJob
    nameWithType: IJob
    fullName: Zeebe.Client.Api.Responses.IJob
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
