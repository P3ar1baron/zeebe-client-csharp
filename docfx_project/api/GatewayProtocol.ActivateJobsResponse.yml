### YamlMime:ManagedReference
items:
- uid: GatewayProtocol.ActivateJobsResponse
  commentId: T:GatewayProtocol.ActivateJobsResponse
  id: ActivateJobsResponse
  parent: GatewayProtocol
  children:
  - GatewayProtocol.ActivateJobsResponse.#ctor
  - GatewayProtocol.ActivateJobsResponse.#ctor(GatewayProtocol.ActivateJobsResponse)
  - GatewayProtocol.ActivateJobsResponse.CalculateSize
  - GatewayProtocol.ActivateJobsResponse.Clone
  - GatewayProtocol.ActivateJobsResponse.Descriptor
  - GatewayProtocol.ActivateJobsResponse.Equals(GatewayProtocol.ActivateJobsResponse)
  - GatewayProtocol.ActivateJobsResponse.Equals(System.Object)
  - GatewayProtocol.ActivateJobsResponse.GetHashCode
  - GatewayProtocol.ActivateJobsResponse.Jobs
  - GatewayProtocol.ActivateJobsResponse.JobsFieldNumber
  - GatewayProtocol.ActivateJobsResponse.MergeFrom(GatewayProtocol.ActivateJobsResponse)
  - GatewayProtocol.ActivateJobsResponse.MergeFrom(pb.CodedInputStream)
  - GatewayProtocol.ActivateJobsResponse.Parser
  - GatewayProtocol.ActivateJobsResponse.ToString
  - GatewayProtocol.ActivateJobsResponse.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: ActivateJobsResponse
  nameWithType: ActivateJobsResponse
  fullName: GatewayProtocol.ActivateJobsResponse
  type: Class
  source:
    id: ActivateJobsResponse
    path: ''
    startLine: 2834
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: 'public sealed class ActivateJobsResponse : pb.IMessage<ActivateJobsResponse>'
    content.vb: >-
      Public NotInheritable Class ActivateJobsResponse
          Inherits pb.IMessage(Of ActivateJobsResponse)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: GatewayProtocol.ActivateJobsResponse.Parser
  commentId: P:GatewayProtocol.ActivateJobsResponse.Parser
  id: Parser
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ActivateJobsResponse.Parser
  fullName: GatewayProtocol.ActivateJobsResponse.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 2837
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public static pb.MessageParser<ActivateJobsResponse> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{GatewayProtocol.ActivateJobsResponse}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ActivateJobsResponse)
  overload: GatewayProtocol.ActivateJobsResponse.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GatewayProtocol.ActivateJobsResponse.Descriptor
  commentId: P:GatewayProtocol.ActivateJobsResponse.Descriptor
  id: Descriptor
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: ActivateJobsResponse.Descriptor
  fullName: GatewayProtocol.ActivateJobsResponse.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 2840
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: GatewayProtocol.ActivateJobsResponse.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GatewayProtocol.ActivateJobsResponse.#ctor
  commentId: M:GatewayProtocol.ActivateJobsResponse.#ctor
  id: '#ctor'
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: ActivateJobsResponse()
  nameWithType: ActivateJobsResponse.ActivateJobsResponse()
  fullName: GatewayProtocol.ActivateJobsResponse.ActivateJobsResponse()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2850
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public ActivateJobsResponse()
    content.vb: Public Sub New
  overload: GatewayProtocol.ActivateJobsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.#ctor(GatewayProtocol.ActivateJobsResponse)
  commentId: M:GatewayProtocol.ActivateJobsResponse.#ctor(GatewayProtocol.ActivateJobsResponse)
  id: '#ctor(GatewayProtocol.ActivateJobsResponse)'
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: ActivateJobsResponse(ActivateJobsResponse)
  nameWithType: ActivateJobsResponse.ActivateJobsResponse(ActivateJobsResponse)
  fullName: GatewayProtocol.ActivateJobsResponse.ActivateJobsResponse(GatewayProtocol.ActivateJobsResponse)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2857
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public ActivateJobsResponse(ActivateJobsResponse other)
    parameters:
    - id: other
      type: GatewayProtocol.ActivateJobsResponse
    content.vb: Public Sub New(other As ActivateJobsResponse)
  overload: GatewayProtocol.ActivateJobsResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.Clone
  commentId: M:GatewayProtocol.ActivateJobsResponse.Clone
  id: Clone
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ActivateJobsResponse.Clone()
  fullName: GatewayProtocol.ActivateJobsResponse.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 2863
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public ActivateJobsResponse Clone()
    return:
      type: GatewayProtocol.ActivateJobsResponse
    content.vb: Public Function Clone As ActivateJobsResponse
  overload: GatewayProtocol.ActivateJobsResponse.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.JobsFieldNumber
  commentId: F:GatewayProtocol.ActivateJobsResponse.JobsFieldNumber
  id: JobsFieldNumber
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: JobsFieldNumber
  nameWithType: ActivateJobsResponse.JobsFieldNumber
  fullName: GatewayProtocol.ActivateJobsResponse.JobsFieldNumber
  type: Field
  source:
    id: JobsFieldNumber
    path: ''
    startLine: 2869
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: Field number for the &quot;jobs&quot; field.
  example: []
  syntax:
    content: public const int JobsFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const JobsFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GatewayProtocol.ActivateJobsResponse.Jobs
  commentId: P:GatewayProtocol.ActivateJobsResponse.Jobs
  id: Jobs
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Jobs
  nameWithType: ActivateJobsResponse.Jobs
  fullName: GatewayProtocol.ActivateJobsResponse.Jobs
  type: Property
  source:
    id: Jobs
    path: ''
    startLine: 2876
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: "\nlist of activated jobs\n"
  example: []
  syntax:
    content: public pbc.RepeatedField<ActivatedJob> Jobs { get; }
    parameters: []
    return:
      type: pbc.RepeatedField{GatewayProtocol.ActivatedJob}
    content.vb: Public ReadOnly Property Jobs As pbc.RepeatedField(Of ActivatedJob)
  overload: GatewayProtocol.ActivateJobsResponse.Jobs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GatewayProtocol.ActivateJobsResponse.Equals(System.Object)
  commentId: M:GatewayProtocol.ActivateJobsResponse.Equals(System.Object)
  id: Equals(System.Object)
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ActivateJobsResponse.Equals(Object)
  fullName: GatewayProtocol.ActivateJobsResponse.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2881
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: GatewayProtocol.ActivateJobsResponse.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ActivateJobsResponse.Equals(GatewayProtocol.ActivateJobsResponse)
  commentId: M:GatewayProtocol.ActivateJobsResponse.Equals(GatewayProtocol.ActivateJobsResponse)
  id: Equals(GatewayProtocol.ActivateJobsResponse)
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: Equals(ActivateJobsResponse)
  nameWithType: ActivateJobsResponse.Equals(ActivateJobsResponse)
  fullName: GatewayProtocol.ActivateJobsResponse.Equals(GatewayProtocol.ActivateJobsResponse)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2886
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public bool Equals(ActivateJobsResponse other)
    parameters:
    - id: other
      type: GatewayProtocol.ActivateJobsResponse
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ActivateJobsResponse) As Boolean
  overload: GatewayProtocol.ActivateJobsResponse.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.GetHashCode
  commentId: M:GatewayProtocol.ActivateJobsResponse.GetHashCode
  id: GetHashCode
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ActivateJobsResponse.GetHashCode()
  fullName: GatewayProtocol.ActivateJobsResponse.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 2898
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: GatewayProtocol.ActivateJobsResponse.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ActivateJobsResponse.ToString
  commentId: M:GatewayProtocol.ActivateJobsResponse.ToString
  id: ToString
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ActivateJobsResponse.ToString()
  fullName: GatewayProtocol.ActivateJobsResponse.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 2908
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: GatewayProtocol.ActivateJobsResponse.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ActivateJobsResponse.WriteTo(pb.CodedOutputStream)
  commentId: M:GatewayProtocol.ActivateJobsResponse.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: ActivateJobsResponse.WriteTo(pb.CodedOutputStream)
  fullName: GatewayProtocol.ActivateJobsResponse.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 2913
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: GatewayProtocol.ActivateJobsResponse.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.CalculateSize
  commentId: M:GatewayProtocol.ActivateJobsResponse.CalculateSize
  id: CalculateSize
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: ActivateJobsResponse.CalculateSize()
  fullName: GatewayProtocol.ActivateJobsResponse.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 2921
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: GatewayProtocol.ActivateJobsResponse.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.MergeFrom(GatewayProtocol.ActivateJobsResponse)
  commentId: M:GatewayProtocol.ActivateJobsResponse.MergeFrom(GatewayProtocol.ActivateJobsResponse)
  id: MergeFrom(GatewayProtocol.ActivateJobsResponse)
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(ActivateJobsResponse)
  nameWithType: ActivateJobsResponse.MergeFrom(ActivateJobsResponse)
  fullName: GatewayProtocol.ActivateJobsResponse.MergeFrom(GatewayProtocol.ActivateJobsResponse)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 2931
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void MergeFrom(ActivateJobsResponse other)
    parameters:
    - id: other
      type: GatewayProtocol.ActivateJobsResponse
    content.vb: Public Sub MergeFrom(other As ActivateJobsResponse)
  overload: GatewayProtocol.ActivateJobsResponse.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ActivateJobsResponse.MergeFrom(pb.CodedInputStream)
  commentId: M:GatewayProtocol.ActivateJobsResponse.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: GatewayProtocol.ActivateJobsResponse
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: ActivateJobsResponse.MergeFrom(pb.CodedInputStream)
  fullName: GatewayProtocol.ActivateJobsResponse.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 2940
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: GatewayProtocol.ActivateJobsResponse.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GatewayProtocol
  commentId: N:GatewayProtocol
  name: GatewayProtocol
  nameWithType: GatewayProtocol
  fullName: GatewayProtocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GatewayProtocol.ActivateJobsResponse.Parser*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.Parser
  name: Parser
  nameWithType: ActivateJobsResponse.Parser
  fullName: GatewayProtocol.ActivateJobsResponse.Parser
- uid: pb.MessageParser{GatewayProtocol.ActivateJobsResponse}
  commentId: '!:pb.MessageParser{GatewayProtocol.ActivateJobsResponse}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<ActivateJobsResponse>
  nameWithType: pb.MessageParser<ActivateJobsResponse>
  fullName: pb.MessageParser<GatewayProtocol.ActivateJobsResponse>
  nameWithType.vb: pb.MessageParser(Of ActivateJobsResponse)
  fullName.vb: pb.MessageParser(Of GatewayProtocol.ActivateJobsResponse)
  name.vb: pb.MessageParser(Of ActivateJobsResponse)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.ActivateJobsResponse
    name: ActivateJobsResponse
    nameWithType: ActivateJobsResponse
    fullName: GatewayProtocol.ActivateJobsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.ActivateJobsResponse
    name: ActivateJobsResponse
    nameWithType: ActivateJobsResponse
    fullName: GatewayProtocol.ActivateJobsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ActivateJobsResponse.Descriptor*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.Descriptor
  name: Descriptor
  nameWithType: ActivateJobsResponse.Descriptor
  fullName: GatewayProtocol.ActivateJobsResponse.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: GatewayProtocol.ActivateJobsResponse.#ctor*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.#ctor
  name: ActivateJobsResponse
  nameWithType: ActivateJobsResponse.ActivateJobsResponse
  fullName: GatewayProtocol.ActivateJobsResponse.ActivateJobsResponse
- uid: GatewayProtocol.ActivateJobsResponse
  commentId: T:GatewayProtocol.ActivateJobsResponse
  parent: GatewayProtocol
  name: ActivateJobsResponse
  nameWithType: ActivateJobsResponse
  fullName: GatewayProtocol.ActivateJobsResponse
- uid: GatewayProtocol.ActivateJobsResponse.Clone*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.Clone
  name: Clone
  nameWithType: ActivateJobsResponse.Clone
  fullName: GatewayProtocol.ActivateJobsResponse.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GatewayProtocol.ActivateJobsResponse.Jobs*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.Jobs
  name: Jobs
  nameWithType: ActivateJobsResponse.Jobs
  fullName: GatewayProtocol.ActivateJobsResponse.Jobs
- uid: pbc.RepeatedField{GatewayProtocol.ActivatedJob}
  commentId: '!:pbc.RepeatedField{GatewayProtocol.ActivatedJob}'
  definition: pbc.RepeatedField`1
  name: pbc.RepeatedField<ActivatedJob>
  nameWithType: pbc.RepeatedField<ActivatedJob>
  fullName: pbc.RepeatedField<GatewayProtocol.ActivatedJob>
  nameWithType.vb: pbc.RepeatedField(Of ActivatedJob)
  fullName.vb: pbc.RepeatedField(Of GatewayProtocol.ActivatedJob)
  name.vb: pbc.RepeatedField(Of ActivatedJob)
  spec.csharp:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.ActivatedJob
    name: ActivatedJob
    nameWithType: ActivatedJob
    fullName: GatewayProtocol.ActivatedJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.ActivatedJob
    name: ActivatedJob
    nameWithType: ActivatedJob
    fullName: GatewayProtocol.ActivatedJob
  - name: )
    nameWithType: )
    fullName: )
- uid: pbc.RepeatedField`1
  isExternal: true
  name: pbc.RepeatedField<>
  nameWithType: pbc.RepeatedField<>
  fullName: pbc.RepeatedField<>
  nameWithType.vb: pbc.RepeatedField(Of )
  fullName.vb: pbc.RepeatedField(Of )
  name.vb: pbc.RepeatedField(Of )
  spec.csharp:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pbc.RepeatedField`1
    name: pbc.RepeatedField
    nameWithType: pbc.RepeatedField
    fullName: pbc.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ActivateJobsResponse.Equals*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.Equals
  name: Equals
  nameWithType: ActivateJobsResponse.Equals
  fullName: GatewayProtocol.ActivateJobsResponse.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GatewayProtocol.ActivateJobsResponse.GetHashCode*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.GetHashCode
  name: GetHashCode
  nameWithType: ActivateJobsResponse.GetHashCode
  fullName: GatewayProtocol.ActivateJobsResponse.GetHashCode
- uid: GatewayProtocol.ActivateJobsResponse.ToString*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.ToString
  name: ToString
  nameWithType: ActivateJobsResponse.ToString
  fullName: GatewayProtocol.ActivateJobsResponse.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GatewayProtocol.ActivateJobsResponse.WriteTo*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.WriteTo
  name: WriteTo
  nameWithType: ActivateJobsResponse.WriteTo
  fullName: GatewayProtocol.ActivateJobsResponse.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: GatewayProtocol.ActivateJobsResponse.CalculateSize*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.CalculateSize
  name: CalculateSize
  nameWithType: ActivateJobsResponse.CalculateSize
  fullName: GatewayProtocol.ActivateJobsResponse.CalculateSize
- uid: GatewayProtocol.ActivateJobsResponse.MergeFrom*
  commentId: Overload:GatewayProtocol.ActivateJobsResponse.MergeFrom
  name: MergeFrom
  nameWithType: ActivateJobsResponse.MergeFrom
  fullName: GatewayProtocol.ActivateJobsResponse.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
