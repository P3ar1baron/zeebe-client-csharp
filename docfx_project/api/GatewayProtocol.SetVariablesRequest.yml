### YamlMime:ManagedReference
items:
- uid: GatewayProtocol.SetVariablesRequest
  commentId: T:GatewayProtocol.SetVariablesRequest
  id: SetVariablesRequest
  parent: GatewayProtocol
  children:
  - GatewayProtocol.SetVariablesRequest.#ctor
  - GatewayProtocol.SetVariablesRequest.#ctor(GatewayProtocol.SetVariablesRequest)
  - GatewayProtocol.SetVariablesRequest.CalculateSize
  - GatewayProtocol.SetVariablesRequest.Clone
  - GatewayProtocol.SetVariablesRequest.Descriptor
  - GatewayProtocol.SetVariablesRequest.ElementInstanceKey
  - GatewayProtocol.SetVariablesRequest.ElementInstanceKeyFieldNumber
  - GatewayProtocol.SetVariablesRequest.Equals(GatewayProtocol.SetVariablesRequest)
  - GatewayProtocol.SetVariablesRequest.Equals(System.Object)
  - GatewayProtocol.SetVariablesRequest.GetHashCode
  - GatewayProtocol.SetVariablesRequest.Local
  - GatewayProtocol.SetVariablesRequest.LocalFieldNumber
  - GatewayProtocol.SetVariablesRequest.MergeFrom(GatewayProtocol.SetVariablesRequest)
  - GatewayProtocol.SetVariablesRequest.MergeFrom(pb.CodedInputStream)
  - GatewayProtocol.SetVariablesRequest.Parser
  - GatewayProtocol.SetVariablesRequest.ToString
  - GatewayProtocol.SetVariablesRequest.Variables
  - GatewayProtocol.SetVariablesRequest.VariablesFieldNumber
  - GatewayProtocol.SetVariablesRequest.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SetVariablesRequest
  nameWithType: SetVariablesRequest
  fullName: GatewayProtocol.SetVariablesRequest
  type: Class
  source:
    id: SetVariablesRequest
    path: ''
    startLine: 7461
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: 'public sealed class SetVariablesRequest : pb.IMessage<SetVariablesRequest>'
    content.vb: >-
      Public NotInheritable Class SetVariablesRequest
          Inherits pb.IMessage(Of SetVariablesRequest)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: GatewayProtocol.SetVariablesRequest.Parser
  commentId: P:GatewayProtocol.SetVariablesRequest.Parser
  id: Parser
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SetVariablesRequest.Parser
  fullName: GatewayProtocol.SetVariablesRequest.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 7464
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public static pb.MessageParser<SetVariablesRequest> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{GatewayProtocol.SetVariablesRequest}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of SetVariablesRequest)
  overload: GatewayProtocol.SetVariablesRequest.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GatewayProtocol.SetVariablesRequest.Descriptor
  commentId: P:GatewayProtocol.SetVariablesRequest.Descriptor
  id: Descriptor
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SetVariablesRequest.Descriptor
  fullName: GatewayProtocol.SetVariablesRequest.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 7467
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: GatewayProtocol.SetVariablesRequest.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GatewayProtocol.SetVariablesRequest.#ctor
  commentId: M:GatewayProtocol.SetVariablesRequest.#ctor
  id: '#ctor'
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: SetVariablesRequest()
  nameWithType: SetVariablesRequest.SetVariablesRequest()
  fullName: GatewayProtocol.SetVariablesRequest.SetVariablesRequest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 7477
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public SetVariablesRequest()
    content.vb: Public Sub New
  overload: GatewayProtocol.SetVariablesRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.#ctor(GatewayProtocol.SetVariablesRequest)
  commentId: M:GatewayProtocol.SetVariablesRequest.#ctor(GatewayProtocol.SetVariablesRequest)
  id: '#ctor(GatewayProtocol.SetVariablesRequest)'
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: SetVariablesRequest(SetVariablesRequest)
  nameWithType: SetVariablesRequest.SetVariablesRequest(SetVariablesRequest)
  fullName: GatewayProtocol.SetVariablesRequest.SetVariablesRequest(GatewayProtocol.SetVariablesRequest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 7484
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public SetVariablesRequest(SetVariablesRequest other)
    parameters:
    - id: other
      type: GatewayProtocol.SetVariablesRequest
    content.vb: Public Sub New(other As SetVariablesRequest)
  overload: GatewayProtocol.SetVariablesRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.Clone
  commentId: M:GatewayProtocol.SetVariablesRequest.Clone
  id: Clone
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SetVariablesRequest.Clone()
  fullName: GatewayProtocol.SetVariablesRequest.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 7492
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public SetVariablesRequest Clone()
    return:
      type: GatewayProtocol.SetVariablesRequest
    content.vb: Public Function Clone As SetVariablesRequest
  overload: GatewayProtocol.SetVariablesRequest.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.ElementInstanceKeyFieldNumber
  commentId: F:GatewayProtocol.SetVariablesRequest.ElementInstanceKeyFieldNumber
  id: ElementInstanceKeyFieldNumber
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: ElementInstanceKeyFieldNumber
  nameWithType: SetVariablesRequest.ElementInstanceKeyFieldNumber
  fullName: GatewayProtocol.SetVariablesRequest.ElementInstanceKeyFieldNumber
  type: Field
  source:
    id: ElementInstanceKeyFieldNumber
    path: ''
    startLine: 7498
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: Field number for the &quot;elementInstanceKey&quot; field.
  example: []
  syntax:
    content: public const int ElementInstanceKeyFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const ElementInstanceKeyFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GatewayProtocol.SetVariablesRequest.ElementInstanceKey
  commentId: P:GatewayProtocol.SetVariablesRequest.ElementInstanceKey
  id: ElementInstanceKey
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: ElementInstanceKey
  nameWithType: SetVariablesRequest.ElementInstanceKey
  fullName: GatewayProtocol.SetVariablesRequest.ElementInstanceKey
  type: Property
  source:
    id: ElementInstanceKey
    path: ''
    startLine: 7505
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: "\nthe unique identifier of a particular element; can be the workflow instance key (as\nobtained during instance creation), or a given element, such as a service task (see\nelementInstanceKey on the job message)\n"
  example: []
  syntax:
    content: public long ElementInstanceKey { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ElementInstanceKey As Long
  overload: GatewayProtocol.SetVariablesRequest.ElementInstanceKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.VariablesFieldNumber
  commentId: F:GatewayProtocol.SetVariablesRequest.VariablesFieldNumber
  id: VariablesFieldNumber
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: VariablesFieldNumber
  nameWithType: SetVariablesRequest.VariablesFieldNumber
  fullName: GatewayProtocol.SetVariablesRequest.VariablesFieldNumber
  type: Field
  source:
    id: VariablesFieldNumber
    path: ''
    startLine: 7514
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: Field number for the &quot;variables&quot; field.
  example: []
  syntax:
    content: public const int VariablesFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const VariablesFieldNumber As Integer = 2
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GatewayProtocol.SetVariablesRequest.Variables
  commentId: P:GatewayProtocol.SetVariablesRequest.Variables
  id: Variables
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: SetVariablesRequest.Variables
  fullName: GatewayProtocol.SetVariablesRequest.Variables
  type: Property
  source:
    id: Variables
    path: ''
    startLine: 7520
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: "\na JSON serialized document describing variables as key value pairs; the root of the document\nmust be an object\n"
  example: []
  syntax:
    content: public string Variables { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Variables As String
  overload: GatewayProtocol.SetVariablesRequest.Variables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.LocalFieldNumber
  commentId: F:GatewayProtocol.SetVariablesRequest.LocalFieldNumber
  id: LocalFieldNumber
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: LocalFieldNumber
  nameWithType: SetVariablesRequest.LocalFieldNumber
  fullName: GatewayProtocol.SetVariablesRequest.LocalFieldNumber
  type: Field
  source:
    id: LocalFieldNumber
    path: ''
    startLine: 7529
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: Field number for the &quot;local&quot; field.
  example: []
  syntax:
    content: public const int LocalFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const LocalFieldNumber As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GatewayProtocol.SetVariablesRequest.Local
  commentId: P:GatewayProtocol.SetVariablesRequest.Local
  id: Local
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Local
  nameWithType: SetVariablesRequest.Local
  fullName: GatewayProtocol.SetVariablesRequest.Local
  type: Property
  source:
    id: Local
    path: ''
    startLine: 7540
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: "\nif true, the variables will be merged strictly into the local scope (as indicated by\nelementInstanceKey); this means the variables is not propagated to upper scopes.\nfor example, let&apos;s say we have two scopes, &apos;1&apos; and &apos;2&apos;, with each having effective variables as:\n1 => `{ &quot;foo&quot; : 2 }`, and 2 => `{ &quot;bar&quot; : 1 }`. if we send an update request with\nelementInstanceKey = 2, variables `{ &quot;foo&quot; : 5 }`, and local is true, then scope 1 will\nbe unchanged, and scope 2 will now be `{ &quot;bar&quot; : 1, &quot;foo&quot; 5 }`. if local was false, however,\nthen scope 1 would be `{ &quot;foo&quot;: 5 }`, and scope 2 would be `{ &quot;bar&quot; : 1 }`.\n"
  example: []
  syntax:
    content: public bool Local { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Local As Boolean
  overload: GatewayProtocol.SetVariablesRequest.Local*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.Equals(System.Object)
  commentId: M:GatewayProtocol.SetVariablesRequest.Equals(System.Object)
  id: Equals(System.Object)
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SetVariablesRequest.Equals(Object)
  fullName: GatewayProtocol.SetVariablesRequest.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 7548
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: GatewayProtocol.SetVariablesRequest.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.SetVariablesRequest.Equals(GatewayProtocol.SetVariablesRequest)
  commentId: M:GatewayProtocol.SetVariablesRequest.Equals(GatewayProtocol.SetVariablesRequest)
  id: Equals(GatewayProtocol.SetVariablesRequest)
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: Equals(SetVariablesRequest)
  nameWithType: SetVariablesRequest.Equals(SetVariablesRequest)
  fullName: GatewayProtocol.SetVariablesRequest.Equals(GatewayProtocol.SetVariablesRequest)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 7553
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public bool Equals(SetVariablesRequest other)
    parameters:
    - id: other
      type: GatewayProtocol.SetVariablesRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SetVariablesRequest) As Boolean
  overload: GatewayProtocol.SetVariablesRequest.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.GetHashCode
  commentId: M:GatewayProtocol.SetVariablesRequest.GetHashCode
  id: GetHashCode
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SetVariablesRequest.GetHashCode()
  fullName: GatewayProtocol.SetVariablesRequest.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 7567
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: GatewayProtocol.SetVariablesRequest.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.SetVariablesRequest.ToString
  commentId: M:GatewayProtocol.SetVariablesRequest.ToString
  id: ToString
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SetVariablesRequest.ToString()
  fullName: GatewayProtocol.SetVariablesRequest.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 7579
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: GatewayProtocol.SetVariablesRequest.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.SetVariablesRequest.WriteTo(pb.CodedOutputStream)
  commentId: M:GatewayProtocol.SetVariablesRequest.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: SetVariablesRequest.WriteTo(pb.CodedOutputStream)
  fullName: GatewayProtocol.SetVariablesRequest.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 7584
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: GatewayProtocol.SetVariablesRequest.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.CalculateSize
  commentId: M:GatewayProtocol.SetVariablesRequest.CalculateSize
  id: CalculateSize
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SetVariablesRequest.CalculateSize()
  fullName: GatewayProtocol.SetVariablesRequest.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 7603
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: GatewayProtocol.SetVariablesRequest.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.MergeFrom(GatewayProtocol.SetVariablesRequest)
  commentId: M:GatewayProtocol.SetVariablesRequest.MergeFrom(GatewayProtocol.SetVariablesRequest)
  id: MergeFrom(GatewayProtocol.SetVariablesRequest)
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(SetVariablesRequest)
  nameWithType: SetVariablesRequest.MergeFrom(SetVariablesRequest)
  fullName: GatewayProtocol.SetVariablesRequest.MergeFrom(GatewayProtocol.SetVariablesRequest)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 7621
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void MergeFrom(SetVariablesRequest other)
    parameters:
    - id: other
      type: GatewayProtocol.SetVariablesRequest
    content.vb: Public Sub MergeFrom(other As SetVariablesRequest)
  overload: GatewayProtocol.SetVariablesRequest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.SetVariablesRequest.MergeFrom(pb.CodedInputStream)
  commentId: M:GatewayProtocol.SetVariablesRequest.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: GatewayProtocol.SetVariablesRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: SetVariablesRequest.MergeFrom(pb.CodedInputStream)
  fullName: GatewayProtocol.SetVariablesRequest.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 7638
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: GatewayProtocol.SetVariablesRequest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GatewayProtocol
  commentId: N:GatewayProtocol
  name: GatewayProtocol
  nameWithType: GatewayProtocol
  fullName: GatewayProtocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GatewayProtocol.SetVariablesRequest.Parser*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.Parser
  name: Parser
  nameWithType: SetVariablesRequest.Parser
  fullName: GatewayProtocol.SetVariablesRequest.Parser
- uid: pb.MessageParser{GatewayProtocol.SetVariablesRequest}
  commentId: '!:pb.MessageParser{GatewayProtocol.SetVariablesRequest}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<SetVariablesRequest>
  nameWithType: pb.MessageParser<SetVariablesRequest>
  fullName: pb.MessageParser<GatewayProtocol.SetVariablesRequest>
  nameWithType.vb: pb.MessageParser(Of SetVariablesRequest)
  fullName.vb: pb.MessageParser(Of GatewayProtocol.SetVariablesRequest)
  name.vb: pb.MessageParser(Of SetVariablesRequest)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.SetVariablesRequest.Descriptor*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.Descriptor
  name: Descriptor
  nameWithType: SetVariablesRequest.Descriptor
  fullName: GatewayProtocol.SetVariablesRequest.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: GatewayProtocol.SetVariablesRequest.#ctor*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.#ctor
  name: SetVariablesRequest
  nameWithType: SetVariablesRequest.SetVariablesRequest
  fullName: GatewayProtocol.SetVariablesRequest.SetVariablesRequest
- uid: GatewayProtocol.SetVariablesRequest
  commentId: T:GatewayProtocol.SetVariablesRequest
  parent: GatewayProtocol
  name: SetVariablesRequest
  nameWithType: SetVariablesRequest
  fullName: GatewayProtocol.SetVariablesRequest
- uid: GatewayProtocol.SetVariablesRequest.Clone*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.Clone
  name: Clone
  nameWithType: SetVariablesRequest.Clone
  fullName: GatewayProtocol.SetVariablesRequest.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GatewayProtocol.SetVariablesRequest.ElementInstanceKey*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.ElementInstanceKey
  name: ElementInstanceKey
  nameWithType: SetVariablesRequest.ElementInstanceKey
  fullName: GatewayProtocol.SetVariablesRequest.ElementInstanceKey
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: GatewayProtocol.SetVariablesRequest.Variables*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.Variables
  name: Variables
  nameWithType: SetVariablesRequest.Variables
  fullName: GatewayProtocol.SetVariablesRequest.Variables
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GatewayProtocol.SetVariablesRequest.Local*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.Local
  name: Local
  nameWithType: SetVariablesRequest.Local
  fullName: GatewayProtocol.SetVariablesRequest.Local
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GatewayProtocol.SetVariablesRequest.Equals*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.Equals
  name: Equals
  nameWithType: SetVariablesRequest.Equals
  fullName: GatewayProtocol.SetVariablesRequest.Equals
- uid: GatewayProtocol.SetVariablesRequest.GetHashCode*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.GetHashCode
  name: GetHashCode
  nameWithType: SetVariablesRequest.GetHashCode
  fullName: GatewayProtocol.SetVariablesRequest.GetHashCode
- uid: GatewayProtocol.SetVariablesRequest.ToString*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.ToString
  name: ToString
  nameWithType: SetVariablesRequest.ToString
  fullName: GatewayProtocol.SetVariablesRequest.ToString
- uid: GatewayProtocol.SetVariablesRequest.WriteTo*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.WriteTo
  name: WriteTo
  nameWithType: SetVariablesRequest.WriteTo
  fullName: GatewayProtocol.SetVariablesRequest.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: GatewayProtocol.SetVariablesRequest.CalculateSize*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.CalculateSize
  name: CalculateSize
  nameWithType: SetVariablesRequest.CalculateSize
  fullName: GatewayProtocol.SetVariablesRequest.CalculateSize
- uid: GatewayProtocol.SetVariablesRequest.MergeFrom*
  commentId: Overload:GatewayProtocol.SetVariablesRequest.MergeFrom
  name: MergeFrom
  nameWithType: SetVariablesRequest.MergeFrom
  fullName: GatewayProtocol.SetVariablesRequest.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
