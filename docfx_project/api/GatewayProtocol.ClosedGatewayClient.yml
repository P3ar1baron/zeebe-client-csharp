### YamlMime:ManagedReference
items:
- uid: GatewayProtocol.ClosedGatewayClient
  commentId: T:GatewayProtocol.ClosedGatewayClient
  id: ClosedGatewayClient
  parent: GatewayProtocol
  children:
  - GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.NewInstance(ClientBaseConfiguration)
  - GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  - GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  - GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  langs:
  - csharp
  - vb
  name: ClosedGatewayClient
  nameWithType: ClosedGatewayClient
  fullName: GatewayProtocol.ClosedGatewayClient
  type: Class
  source:
    id: ClosedGatewayClient
    path: ''
    startLine: 2155
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: 'public class ClosedGatewayClient : Gateway.GatewayClient'
    content.vb: >-
      Public Class ClosedGatewayClient
          Inherits Gateway.GatewayClient
  inheritance:
  - System.Object
  - GatewayProtocol.Gateway.GatewayClient
  inheritedMembers:
  - GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
  - GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: ActivateJobs(GatewayProtocol.ActivateJobsRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: ActivateJobs(ActivateJobsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.ActivateJobs(ActivateJobsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: ActivateJobs
    path: ''
    startLine: 2159
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncServerStreamingCall<ActivateJobsResponse> ActivateJobs(ActivateJobsRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.ActivateJobsRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncServerStreamingCall{GatewayProtocol.ActivateJobsResponse}
    content.vb: Public Overrides Function ActivateJobs(request As ActivateJobsRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncServerStreamingCall(Of ActivateJobsResponse)
  overload: GatewayProtocol.ClosedGatewayClient.ActivateJobs*
  nameWithType.vb: ClosedGatewayClient.ActivateJobs(ActivateJobsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: ActivateJobs(ActivateJobsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,CallOptions)
  id: ActivateJobs(GatewayProtocol.ActivateJobsRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: ActivateJobs(ActivateJobsRequest, CallOptions)
  nameWithType: ClosedGatewayClient.ActivateJobs(ActivateJobsRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest, CallOptions)
  type: Method
  source:
    id: ActivateJobs
    path: ''
    startLine: 2165
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncServerStreamingCall<ActivateJobsResponse> ActivateJobs(ActivateJobsRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.ActivateJobsRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncServerStreamingCall{GatewayProtocol.ActivateJobsResponse}
    content.vb: Public Overrides Function ActivateJobs(request As ActivateJobsRequest, options As CallOptions) As AsyncServerStreamingCall(Of ActivateJobsResponse)
  overload: GatewayProtocol.ClosedGatewayClient.ActivateJobs*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CancelWorkflowInstance(CancelWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.CancelWorkflowInstance(CancelWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: CancelWorkflowInstance
    path: ''
    startLine: 2170
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override CancelWorkflowInstanceResponse CancelWorkflowInstance(CancelWorkflowInstanceRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.CancelWorkflowInstanceRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.CancelWorkflowInstanceResponse
    content.vb: Public Overrides Function CancelWorkflowInstance(request As CancelWorkflowInstanceRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As CancelWorkflowInstanceResponse
  overload: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance*
  nameWithType.vb: ClosedGatewayClient.CancelWorkflowInstance(CancelWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: CancelWorkflowInstance(CancelWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  id: CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CancelWorkflowInstance(CancelWorkflowInstanceRequest, CallOptions)
  nameWithType: ClosedGatewayClient.CancelWorkflowInstance(CancelWorkflowInstanceRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest, CallOptions)
  type: Method
  source:
    id: CancelWorkflowInstance
    path: ''
    startLine: 2176
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override CancelWorkflowInstanceResponse CancelWorkflowInstance(CancelWorkflowInstanceRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.CancelWorkflowInstanceRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.CancelWorkflowInstanceResponse
    content.vb: Public Overrides Function CancelWorkflowInstance(request As CancelWorkflowInstanceRequest, options As CallOptions) As CancelWorkflowInstanceResponse
  overload: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: CancelWorkflowInstanceAsync
    path: ''
    startLine: 2181
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<CancelWorkflowInstanceResponse> CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.CancelWorkflowInstanceRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.CancelWorkflowInstanceResponse}
    content.vb: Public Overrides Function CancelWorkflowInstanceAsync(request As CancelWorkflowInstanceRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of CancelWorkflowInstanceResponse)
  overload: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync*
  nameWithType.vb: ClosedGatewayClient.CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  id: CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, CallOptions)
  nameWithType: ClosedGatewayClient.CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest, CallOptions)
  type: Method
  source:
    id: CancelWorkflowInstanceAsync
    path: ''
    startLine: 2187
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<CancelWorkflowInstanceResponse> CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.CancelWorkflowInstanceRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.CancelWorkflowInstanceResponse}
    content.vb: Public Overrides Function CancelWorkflowInstanceAsync(request As CancelWorkflowInstanceRequest, options As CallOptions) As AsyncUnaryCall(Of CancelWorkflowInstanceResponse)
  overload: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: CompleteJob(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CompleteJob(CompleteJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.CompleteJob(CompleteJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: CompleteJob
    path: ''
    startLine: 2192
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override CompleteJobResponse CompleteJob(CompleteJobRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.CompleteJobRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.CompleteJobResponse
    content.vb: Public Overrides Function CompleteJob(request As CompleteJobRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As CompleteJobResponse
  overload: GatewayProtocol.ClosedGatewayClient.CompleteJob*
  nameWithType.vb: ClosedGatewayClient.CompleteJob(CompleteJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: CompleteJob(CompleteJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,CallOptions)
  id: CompleteJob(GatewayProtocol.CompleteJobRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CompleteJob(CompleteJobRequest, CallOptions)
  nameWithType: ClosedGatewayClient.CompleteJob(CompleteJobRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest, CallOptions)
  type: Method
  source:
    id: CompleteJob
    path: ''
    startLine: 2198
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override CompleteJobResponse CompleteJob(CompleteJobRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.CompleteJobRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.CompleteJobResponse
    content.vb: Public Overrides Function CompleteJob(request As CompleteJobRequest, options As CallOptions) As CompleteJobResponse
  overload: GatewayProtocol.ClosedGatewayClient.CompleteJob*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: CompleteJobAsync(GatewayProtocol.CompleteJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CompleteJobAsync(CompleteJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.CompleteJobAsync(CompleteJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: CompleteJobAsync
    path: ''
    startLine: 2203
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<CompleteJobResponse> CompleteJobAsync(CompleteJobRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.CompleteJobRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.CompleteJobResponse}
    content.vb: Public Overrides Function CompleteJobAsync(request As CompleteJobRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of CompleteJobResponse)
  overload: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync*
  nameWithType.vb: ClosedGatewayClient.CompleteJobAsync(CompleteJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: CompleteJobAsync(CompleteJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,CallOptions)
  id: CompleteJobAsync(GatewayProtocol.CompleteJobRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CompleteJobAsync(CompleteJobRequest, CallOptions)
  nameWithType: ClosedGatewayClient.CompleteJobAsync(CompleteJobRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest, CallOptions)
  type: Method
  source:
    id: CompleteJobAsync
    path: ''
    startLine: 2209
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<CompleteJobResponse> CompleteJobAsync(CompleteJobRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.CompleteJobRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.CompleteJobResponse}
    content.vb: Public Overrides Function CompleteJobAsync(request As CompleteJobRequest, options As CallOptions) As AsyncUnaryCall(Of CompleteJobResponse)
  overload: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CreateWorkflowInstance(CreateWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.CreateWorkflowInstance(CreateWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: CreateWorkflowInstance
    path: ''
    startLine: 2214
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override CreateWorkflowInstanceResponse CreateWorkflowInstance(CreateWorkflowInstanceRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.CreateWorkflowInstanceRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.CreateWorkflowInstanceResponse
    content.vb: Public Overrides Function CreateWorkflowInstance(request As CreateWorkflowInstanceRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As CreateWorkflowInstanceResponse
  overload: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance*
  nameWithType.vb: ClosedGatewayClient.CreateWorkflowInstance(CreateWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: CreateWorkflowInstance(CreateWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  id: CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CreateWorkflowInstance(CreateWorkflowInstanceRequest, CallOptions)
  nameWithType: ClosedGatewayClient.CreateWorkflowInstance(CreateWorkflowInstanceRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest, CallOptions)
  type: Method
  source:
    id: CreateWorkflowInstance
    path: ''
    startLine: 2220
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override CreateWorkflowInstanceResponse CreateWorkflowInstance(CreateWorkflowInstanceRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.CreateWorkflowInstanceRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.CreateWorkflowInstanceResponse
    content.vb: Public Overrides Function CreateWorkflowInstance(request As CreateWorkflowInstanceRequest, options As CallOptions) As CreateWorkflowInstanceResponse
  overload: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: CreateWorkflowInstanceAsync
    path: ''
    startLine: 2225
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<CreateWorkflowInstanceResponse> CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.CreateWorkflowInstanceRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.CreateWorkflowInstanceResponse}
    content.vb: Public Overrides Function CreateWorkflowInstanceAsync(request As CreateWorkflowInstanceRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of CreateWorkflowInstanceResponse)
  overload: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync*
  nameWithType.vb: ClosedGatewayClient.CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  id: CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, CallOptions)
  nameWithType: ClosedGatewayClient.CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest, CallOptions)
  type: Method
  source:
    id: CreateWorkflowInstanceAsync
    path: ''
    startLine: 2231
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<CreateWorkflowInstanceResponse> CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.CreateWorkflowInstanceRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.CreateWorkflowInstanceResponse}
    content.vb: Public Overrides Function CreateWorkflowInstanceAsync(request As CreateWorkflowInstanceRequest, options As CallOptions) As AsyncUnaryCall(Of CreateWorkflowInstanceResponse)
  overload: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: DeployWorkflow(DeployWorkflowRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.DeployWorkflow(DeployWorkflowRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: DeployWorkflow
    path: ''
    startLine: 2236
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override DeployWorkflowResponse DeployWorkflow(DeployWorkflowRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.DeployWorkflowRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.DeployWorkflowResponse
    content.vb: Public Overrides Function DeployWorkflow(request As DeployWorkflowRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As DeployWorkflowResponse
  overload: GatewayProtocol.ClosedGatewayClient.DeployWorkflow*
  nameWithType.vb: ClosedGatewayClient.DeployWorkflow(DeployWorkflowRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: DeployWorkflow(DeployWorkflowRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  id: DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: DeployWorkflow(DeployWorkflowRequest, CallOptions)
  nameWithType: ClosedGatewayClient.DeployWorkflow(DeployWorkflowRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest, CallOptions)
  type: Method
  source:
    id: DeployWorkflow
    path: ''
    startLine: 2242
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override DeployWorkflowResponse DeployWorkflow(DeployWorkflowRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.DeployWorkflowRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.DeployWorkflowResponse
    content.vb: Public Overrides Function DeployWorkflow(request As DeployWorkflowRequest, options As CallOptions) As DeployWorkflowResponse
  overload: GatewayProtocol.ClosedGatewayClient.DeployWorkflow*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: DeployWorkflowAsync(DeployWorkflowRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.DeployWorkflowAsync(DeployWorkflowRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: DeployWorkflowAsync
    path: ''
    startLine: 2247
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<DeployWorkflowResponse> DeployWorkflowAsync(DeployWorkflowRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.DeployWorkflowRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.DeployWorkflowResponse}
    content.vb: Public Overrides Function DeployWorkflowAsync(request As DeployWorkflowRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of DeployWorkflowResponse)
  overload: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync*
  nameWithType.vb: ClosedGatewayClient.DeployWorkflowAsync(DeployWorkflowRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: DeployWorkflowAsync(DeployWorkflowRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  id: DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: DeployWorkflowAsync(DeployWorkflowRequest, CallOptions)
  nameWithType: ClosedGatewayClient.DeployWorkflowAsync(DeployWorkflowRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest, CallOptions)
  type: Method
  source:
    id: DeployWorkflowAsync
    path: ''
    startLine: 2253
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<DeployWorkflowResponse> DeployWorkflowAsync(DeployWorkflowRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.DeployWorkflowRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.DeployWorkflowResponse}
    content.vb: Public Overrides Function DeployWorkflowAsync(request As DeployWorkflowRequest, options As CallOptions) As AsyncUnaryCall(Of DeployWorkflowResponse)
  overload: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: FailJob(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: FailJob(FailJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.FailJob(FailJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: FailJob
    path: ''
    startLine: 2258
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override FailJobResponse FailJob(FailJobRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.FailJobRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.FailJobResponse
    content.vb: Public Overrides Function FailJob(request As FailJobRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As FailJobResponse
  overload: GatewayProtocol.ClosedGatewayClient.FailJob*
  nameWithType.vb: ClosedGatewayClient.FailJob(FailJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: FailJob(FailJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest,CallOptions)
  id: FailJob(GatewayProtocol.FailJobRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: FailJob(FailJobRequest, CallOptions)
  nameWithType: ClosedGatewayClient.FailJob(FailJobRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.FailJob(GatewayProtocol.FailJobRequest, CallOptions)
  type: Method
  source:
    id: FailJob
    path: ''
    startLine: 2264
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override FailJobResponse FailJob(FailJobRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.FailJobRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.FailJobResponse
    content.vb: Public Overrides Function FailJob(request As FailJobRequest, options As CallOptions) As FailJobResponse
  overload: GatewayProtocol.ClosedGatewayClient.FailJob*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: FailJobAsync(GatewayProtocol.FailJobRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: FailJobAsync(FailJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.FailJobAsync(FailJobRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: FailJobAsync
    path: ''
    startLine: 2269
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<FailJobResponse> FailJobAsync(FailJobRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.FailJobRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.FailJobResponse}
    content.vb: Public Overrides Function FailJobAsync(request As FailJobRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of FailJobResponse)
  overload: GatewayProtocol.ClosedGatewayClient.FailJobAsync*
  nameWithType.vb: ClosedGatewayClient.FailJobAsync(FailJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: FailJobAsync(FailJobRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,CallOptions)
  id: FailJobAsync(GatewayProtocol.FailJobRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: FailJobAsync(FailJobRequest, CallOptions)
  nameWithType: ClosedGatewayClient.FailJobAsync(FailJobRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest, CallOptions)
  type: Method
  source:
    id: FailJobAsync
    path: ''
    startLine: 2275
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<FailJobResponse> FailJobAsync(FailJobRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.FailJobRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.FailJobResponse}
    content.vb: Public Overrides Function FailJobAsync(request As FailJobRequest, options As CallOptions) As AsyncUnaryCall(Of FailJobResponse)
  overload: GatewayProtocol.ClosedGatewayClient.FailJobAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: PublishMessage(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: PublishMessage(PublishMessageRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.PublishMessage(PublishMessageRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: PublishMessage
    path: ''
    startLine: 2280
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override PublishMessageResponse PublishMessage(PublishMessageRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.PublishMessageRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.PublishMessageResponse
    content.vb: Public Overrides Function PublishMessage(request As PublishMessageRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As PublishMessageResponse
  overload: GatewayProtocol.ClosedGatewayClient.PublishMessage*
  nameWithType.vb: ClosedGatewayClient.PublishMessage(PublishMessageRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: PublishMessage(PublishMessageRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,CallOptions)
  id: PublishMessage(GatewayProtocol.PublishMessageRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: PublishMessage(PublishMessageRequest, CallOptions)
  nameWithType: ClosedGatewayClient.PublishMessage(PublishMessageRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest, CallOptions)
  type: Method
  source:
    id: PublishMessage
    path: ''
    startLine: 2286
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override PublishMessageResponse PublishMessage(PublishMessageRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.PublishMessageRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.PublishMessageResponse
    content.vb: Public Overrides Function PublishMessage(request As PublishMessageRequest, options As CallOptions) As PublishMessageResponse
  overload: GatewayProtocol.ClosedGatewayClient.PublishMessage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: PublishMessageAsync(GatewayProtocol.PublishMessageRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: PublishMessageAsync(PublishMessageRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.PublishMessageAsync(PublishMessageRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: PublishMessageAsync
    path: ''
    startLine: 2291
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<PublishMessageResponse> PublishMessageAsync(PublishMessageRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.PublishMessageRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.PublishMessageResponse}
    content.vb: Public Overrides Function PublishMessageAsync(request As PublishMessageRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of PublishMessageResponse)
  overload: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync*
  nameWithType.vb: ClosedGatewayClient.PublishMessageAsync(PublishMessageRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: PublishMessageAsync(PublishMessageRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,CallOptions)
  id: PublishMessageAsync(GatewayProtocol.PublishMessageRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: PublishMessageAsync(PublishMessageRequest, CallOptions)
  nameWithType: ClosedGatewayClient.PublishMessageAsync(PublishMessageRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest, CallOptions)
  type: Method
  source:
    id: PublishMessageAsync
    path: ''
    startLine: 2297
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<PublishMessageResponse> PublishMessageAsync(PublishMessageRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.PublishMessageRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.PublishMessageResponse}
    content.vb: Public Overrides Function PublishMessageAsync(request As PublishMessageRequest, options As CallOptions) As AsyncUnaryCall(Of PublishMessageResponse)
  overload: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: ResolveIncident(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: ResolveIncident(ResolveIncidentRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.ResolveIncident(ResolveIncidentRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: ResolveIncident
    path: ''
    startLine: 2302
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override ResolveIncidentResponse ResolveIncident(ResolveIncidentRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.ResolveIncidentRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.ResolveIncidentResponse
    content.vb: Public Overrides Function ResolveIncident(request As ResolveIncidentRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As ResolveIncidentResponse
  overload: GatewayProtocol.ClosedGatewayClient.ResolveIncident*
  nameWithType.vb: ClosedGatewayClient.ResolveIncident(ResolveIncidentRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: ResolveIncident(ResolveIncidentRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  id: ResolveIncident(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: ResolveIncident(ResolveIncidentRequest, CallOptions)
  nameWithType: ClosedGatewayClient.ResolveIncident(ResolveIncidentRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest, CallOptions)
  type: Method
  source:
    id: ResolveIncident
    path: ''
    startLine: 2308
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override ResolveIncidentResponse ResolveIncident(ResolveIncidentRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.ResolveIncidentRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.ResolveIncidentResponse
    content.vb: Public Overrides Function ResolveIncident(request As ResolveIncidentRequest, options As CallOptions) As ResolveIncidentResponse
  overload: GatewayProtocol.ClosedGatewayClient.ResolveIncident*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: ResolveIncidentAsync(ResolveIncidentRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.ResolveIncidentAsync(ResolveIncidentRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: ResolveIncidentAsync
    path: ''
    startLine: 2313
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<ResolveIncidentResponse> ResolveIncidentAsync(ResolveIncidentRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.ResolveIncidentRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.ResolveIncidentResponse}
    content.vb: Public Overrides Function ResolveIncidentAsync(request As ResolveIncidentRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ResolveIncidentResponse)
  overload: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync*
  nameWithType.vb: ClosedGatewayClient.ResolveIncidentAsync(ResolveIncidentRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: ResolveIncidentAsync(ResolveIncidentRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  id: ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: ResolveIncidentAsync(ResolveIncidentRequest, CallOptions)
  nameWithType: ClosedGatewayClient.ResolveIncidentAsync(ResolveIncidentRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest, CallOptions)
  type: Method
  source:
    id: ResolveIncidentAsync
    path: ''
    startLine: 2319
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<ResolveIncidentResponse> ResolveIncidentAsync(ResolveIncidentRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.ResolveIncidentRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.ResolveIncidentResponse}
    content.vb: Public Overrides Function ResolveIncidentAsync(request As ResolveIncidentRequest, options As CallOptions) As AsyncUnaryCall(Of ResolveIncidentResponse)
  overload: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: SetVariables(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: SetVariables(SetVariablesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.SetVariables(SetVariablesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: SetVariables
    path: ''
    startLine: 2324
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override SetVariablesResponse SetVariables(SetVariablesRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.SetVariablesRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.SetVariablesResponse
    content.vb: Public Overrides Function SetVariables(request As SetVariablesRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As SetVariablesResponse
  overload: GatewayProtocol.ClosedGatewayClient.SetVariables*
  nameWithType.vb: ClosedGatewayClient.SetVariables(SetVariablesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: SetVariables(SetVariablesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,CallOptions)
  id: SetVariables(GatewayProtocol.SetVariablesRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: SetVariables(SetVariablesRequest, CallOptions)
  nameWithType: ClosedGatewayClient.SetVariables(SetVariablesRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest, CallOptions)
  type: Method
  source:
    id: SetVariables
    path: ''
    startLine: 2330
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override SetVariablesResponse SetVariables(SetVariablesRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.SetVariablesRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.SetVariablesResponse
    content.vb: Public Overrides Function SetVariables(request As SetVariablesRequest, options As CallOptions) As SetVariablesResponse
  overload: GatewayProtocol.ClosedGatewayClient.SetVariables*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: SetVariablesAsync(GatewayProtocol.SetVariablesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: SetVariablesAsync(SetVariablesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.SetVariablesAsync(SetVariablesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: SetVariablesAsync
    path: ''
    startLine: 2335
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<SetVariablesResponse> SetVariablesAsync(SetVariablesRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.SetVariablesRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.SetVariablesResponse}
    content.vb: Public Overrides Function SetVariablesAsync(request As SetVariablesRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SetVariablesResponse)
  overload: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync*
  nameWithType.vb: ClosedGatewayClient.SetVariablesAsync(SetVariablesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: SetVariablesAsync(SetVariablesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,CallOptions)
  id: SetVariablesAsync(GatewayProtocol.SetVariablesRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: SetVariablesAsync(SetVariablesRequest, CallOptions)
  nameWithType: ClosedGatewayClient.SetVariablesAsync(SetVariablesRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest, CallOptions)
  type: Method
  source:
    id: SetVariablesAsync
    path: ''
    startLine: 2341
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<SetVariablesResponse> SetVariablesAsync(SetVariablesRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.SetVariablesRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.SetVariablesResponse}
    content.vb: Public Overrides Function SetVariablesAsync(request As SetVariablesRequest, options As CallOptions) As AsyncUnaryCall(Of SetVariablesResponse)
  overload: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: Topology(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: Topology(TopologyRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.Topology(TopologyRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: Topology
    path: ''
    startLine: 2346
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override TopologyResponse Topology(TopologyRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.TopologyRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.TopologyResponse
    content.vb: Public Overrides Function Topology(request As TopologyRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As TopologyResponse
  overload: GatewayProtocol.ClosedGatewayClient.Topology*
  nameWithType.vb: ClosedGatewayClient.Topology(TopologyRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: Topology(TopologyRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest,CallOptions)
  id: Topology(GatewayProtocol.TopologyRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: Topology(TopologyRequest, CallOptions)
  nameWithType: ClosedGatewayClient.Topology(TopologyRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.Topology(GatewayProtocol.TopologyRequest, CallOptions)
  type: Method
  source:
    id: Topology
    path: ''
    startLine: 2352
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override TopologyResponse Topology(TopologyRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.TopologyRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.TopologyResponse
    content.vb: Public Overrides Function Topology(request As TopologyRequest, options As CallOptions) As TopologyResponse
  overload: GatewayProtocol.ClosedGatewayClient.Topology*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: TopologyAsync(GatewayProtocol.TopologyRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: TopologyAsync(TopologyRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.TopologyAsync(TopologyRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: TopologyAsync
    path: ''
    startLine: 2357
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<TopologyResponse> TopologyAsync(TopologyRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.TopologyRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.TopologyResponse}
    content.vb: Public Overrides Function TopologyAsync(request As TopologyRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of TopologyResponse)
  overload: GatewayProtocol.ClosedGatewayClient.TopologyAsync*
  nameWithType.vb: ClosedGatewayClient.TopologyAsync(TopologyRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: TopologyAsync(TopologyRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,CallOptions)
  id: TopologyAsync(GatewayProtocol.TopologyRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: TopologyAsync(TopologyRequest, CallOptions)
  nameWithType: ClosedGatewayClient.TopologyAsync(TopologyRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest, CallOptions)
  type: Method
  source:
    id: TopologyAsync
    path: ''
    startLine: 2363
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<TopologyResponse> TopologyAsync(TopologyRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.TopologyRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.TopologyResponse}
    content.vb: Public Overrides Function TopologyAsync(request As TopologyRequest, options As CallOptions) As AsyncUnaryCall(Of TopologyResponse)
  overload: GatewayProtocol.ClosedGatewayClient.TopologyAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: UpdateJobRetries(UpdateJobRetriesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.UpdateJobRetries(UpdateJobRetriesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: UpdateJobRetries
    path: ''
    startLine: 2368
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override UpdateJobRetriesResponse UpdateJobRetries(UpdateJobRetriesRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.UpdateJobRetriesRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: GatewayProtocol.UpdateJobRetriesResponse
    content.vb: Public Overrides Function UpdateJobRetries(request As UpdateJobRetriesRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As UpdateJobRetriesResponse
  overload: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries*
  nameWithType.vb: ClosedGatewayClient.UpdateJobRetries(UpdateJobRetriesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: UpdateJobRetries(UpdateJobRetriesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  id: UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: UpdateJobRetries(UpdateJobRetriesRequest, CallOptions)
  nameWithType: ClosedGatewayClient.UpdateJobRetries(UpdateJobRetriesRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest, CallOptions)
  type: Method
  source:
    id: UpdateJobRetries
    path: ''
    startLine: 2374
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override UpdateJobRetriesResponse UpdateJobRetries(UpdateJobRetriesRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.UpdateJobRetriesRequest
    - id: options
      type: CallOptions
    return:
      type: GatewayProtocol.UpdateJobRetriesResponse
    content.vb: Public Overrides Function UpdateJobRetries(request As UpdateJobRetriesRequest, options As CallOptions) As UpdateJobRetriesResponse
  overload: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  commentId: M:GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  id: UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,Metadata,System.Nullable{DateTime},CancellationToken)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: UpdateJobRetriesAsync(UpdateJobRetriesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: ClosedGatewayClient.UpdateJobRetriesAsync(UpdateJobRetriesRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest, Metadata, System.Nullable<DateTime>, CancellationToken)
  type: Method
  source:
    id: UpdateJobRetriesAsync
    path: ''
    startLine: 2379
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<UpdateJobRetriesResponse> UpdateJobRetriesAsync(UpdateJobRetriesRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = null)
    parameters:
    - id: request
      type: GatewayProtocol.UpdateJobRetriesRequest
    - id: headers
      type: Metadata
    - id: deadline
      type: System.Nullable{DateTime}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: AsyncUnaryCall{GatewayProtocol.UpdateJobRetriesResponse}
    content.vb: Public Overrides Function UpdateJobRetriesAsync(request As UpdateJobRetriesRequest, headers As Metadata = Nothing, deadline As DateTime? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of UpdateJobRetriesResponse)
  overload: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync*
  nameWithType.vb: ClosedGatewayClient.UpdateJobRetriesAsync(UpdateJobRetriesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest, Metadata, System.Nullable(Of DateTime), CancellationToken)
  name.vb: UpdateJobRetriesAsync(UpdateJobRetriesRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  commentId: M:GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  id: UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,CallOptions)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: UpdateJobRetriesAsync(UpdateJobRetriesRequest, CallOptions)
  nameWithType: ClosedGatewayClient.UpdateJobRetriesAsync(UpdateJobRetriesRequest, CallOptions)
  fullName: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest, CallOptions)
  type: Method
  source:
    id: UpdateJobRetriesAsync
    path: ''
    startLine: 2385
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override AsyncUnaryCall<UpdateJobRetriesResponse> UpdateJobRetriesAsync(UpdateJobRetriesRequest request, CallOptions options)
    parameters:
    - id: request
      type: GatewayProtocol.UpdateJobRetriesRequest
    - id: options
      type: CallOptions
    return:
      type: AsyncUnaryCall{GatewayProtocol.UpdateJobRetriesResponse}
    content.vb: Public Overrides Function UpdateJobRetriesAsync(request As UpdateJobRetriesRequest, options As CallOptions) As AsyncUnaryCall(Of UpdateJobRetriesResponse)
  overload: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ClosedGatewayClient.NewInstance(ClientBaseConfiguration)
  commentId: M:GatewayProtocol.ClosedGatewayClient.NewInstance(ClientBaseConfiguration)
  id: NewInstance(ClientBaseConfiguration)
  parent: GatewayProtocol.ClosedGatewayClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClosedGatewayClient.NewInstance(ClientBaseConfiguration)
  fullName: GatewayProtocol.ClosedGatewayClient.NewInstance(ClientBaseConfiguration)
  type: Method
  source:
    id: NewInstance
    path: ''
    startLine: 2390
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: protected override Gateway.GatewayClient NewInstance(ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: ClientBaseConfiguration
    return:
      type: GatewayProtocol.Gateway.GatewayClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBaseConfiguration) As Gateway.GatewayClient
  overridden: GatewayProtocol.Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
  overload: GatewayProtocol.ClosedGatewayClient.NewInstance*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: GatewayProtocol
  commentId: N:GatewayProtocol
  name: GatewayProtocol
  nameWithType: GatewayProtocol
  fullName: GatewayProtocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GatewayProtocol.Gateway.GatewayClient
  commentId: T:GatewayProtocol.Gateway.GatewayClient
  parent: GatewayProtocol
  name: Gateway.GatewayClient
  nameWithType: Gateway.GatewayClient
  fullName: GatewayProtocol.Gateway.GatewayClient
- uid: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: ActivateJobs(ActivateJobsRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.ActivateJobs(ActivateJobsRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.ActivateJobs(ActivateJobsRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ActivateJobs(ActivateJobsRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: ActivateJobs
    nameWithType: Gateway.GatewayClient.ActivateJobs
    fullName: GatewayProtocol.Gateway.GatewayClient.ActivateJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ActivateJobsRequest
    name: ActivateJobsRequest
    nameWithType: ActivateJobsRequest
    fullName: GatewayProtocol.ActivateJobsRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: ActivateJobs
    nameWithType: Gateway.GatewayClient.ActivateJobs
    fullName: GatewayProtocol.Gateway.GatewayClient.ActivateJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ActivateJobsRequest
    name: ActivateJobsRequest
    nameWithType: ActivateJobsRequest
    fullName: GatewayProtocol.ActivateJobsRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: ActivateJobs(ActivateJobsRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.ActivateJobs(ActivateJobsRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.CallOptions)
    name: ActivateJobs
    nameWithType: Gateway.GatewayClient.ActivateJobs
    fullName: GatewayProtocol.Gateway.GatewayClient.ActivateJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ActivateJobsRequest
    name: ActivateJobsRequest
    nameWithType: ActivateJobsRequest
    fullName: GatewayProtocol.ActivateJobsRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.ActivateJobs(GatewayProtocol.ActivateJobsRequest,grpc.CallOptions)
    name: ActivateJobs
    nameWithType: Gateway.GatewayClient.ActivateJobs
    fullName: GatewayProtocol.Gateway.GatewayClient.ActivateJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ActivateJobsRequest
    name: ActivateJobsRequest
    nameWithType: ActivateJobsRequest
    fullName: GatewayProtocol.ActivateJobsRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CancelWorkflowInstance(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CancelWorkflowInstance(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CancelWorkflowInstance(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CancelWorkflowInstance(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CancelWorkflowInstance
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CancelWorkflowInstance
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CancelWorkflowInstance(CancelWorkflowInstanceRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CancelWorkflowInstance(CancelWorkflowInstanceRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
    name: CancelWorkflowInstance
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
    name: CancelWorkflowInstance
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CancelWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CancelWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CancelWorkflowInstanceAsync(CancelWorkflowInstanceRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
    name: CancelWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync(GatewayProtocol.CancelWorkflowInstanceRequest,grpc.CallOptions)
    name: CancelWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CancelWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CancelWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CancelWorkflowInstanceRequest
    name: CancelWorkflowInstanceRequest
    nameWithType: CancelWorkflowInstanceRequest
    fullName: GatewayProtocol.CancelWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CompleteJob(CompleteJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CompleteJob(CompleteJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CompleteJob(CompleteJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CompleteJob(CompleteJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CompleteJob
    nameWithType: Gateway.GatewayClient.CompleteJob
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CompleteJob
    nameWithType: Gateway.GatewayClient.CompleteJob
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CompleteJob(CompleteJobRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CompleteJob(CompleteJobRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
    name: CompleteJob
    nameWithType: Gateway.GatewayClient.CompleteJob
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJob(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
    name: CompleteJob
    nameWithType: Gateway.GatewayClient.CompleteJob
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CompleteJobAsync(CompleteJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CompleteJobAsync(CompleteJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CompleteJobAsync(CompleteJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CompleteJobAsync(CompleteJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CompleteJobAsync
    nameWithType: Gateway.GatewayClient.CompleteJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CompleteJobAsync
    nameWithType: Gateway.GatewayClient.CompleteJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CompleteJobAsync(CompleteJobRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CompleteJobAsync(CompleteJobRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
    name: CompleteJobAsync
    nameWithType: Gateway.GatewayClient.CompleteJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync(GatewayProtocol.CompleteJobRequest,grpc.CallOptions)
    name: CompleteJobAsync
    nameWithType: Gateway.GatewayClient.CompleteJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CompleteJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CompleteJobRequest
    name: CompleteJobRequest
    nameWithType: CompleteJobRequest
    fullName: GatewayProtocol.CompleteJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstance(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstance(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CreateWorkflowInstance(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateWorkflowInstance(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstance
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstance
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstance(CreateWorkflowInstanceRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstance(CreateWorkflowInstanceRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
    name: CreateWorkflowInstance
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
    name: CreateWorkflowInstance
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceAsync(CreateWorkflowInstanceRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
    name: CreateWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync(GatewayProtocol.CreateWorkflowInstanceRequest,grpc.CallOptions)
    name: CreateWorkflowInstanceAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceRequest
    name: CreateWorkflowInstanceRequest
    nameWithType: CreateWorkflowInstanceRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstanceWithResult(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResult(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CreateWorkflowInstanceWithResult(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateWorkflowInstanceWithResult(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstanceWithResult
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResult
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstanceWithResult
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResult
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstanceWithResult(CreateWorkflowInstanceWithResultRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResult(CreateWorkflowInstanceWithResultRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
    name: CreateWorkflowInstanceWithResult
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResult
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
    name: CreateWorkflowInstanceWithResult
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResult
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstanceWithResultAsync(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateWorkflowInstanceWithResultAsync(CreateWorkflowInstanceWithResultRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstanceWithResultAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: CreateWorkflowInstanceWithResultAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: CreateWorkflowInstanceWithResultAsync(CreateWorkflowInstanceWithResultRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(CreateWorkflowInstanceWithResultRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
    name: CreateWorkflowInstanceWithResultAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync(GatewayProtocol.CreateWorkflowInstanceWithResultRequest,grpc.CallOptions)
    name: CreateWorkflowInstanceWithResultAsync
    nameWithType: Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.CreateWorkflowInstanceWithResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
    name: CreateWorkflowInstanceWithResultRequest
    nameWithType: CreateWorkflowInstanceWithResultRequest
    fullName: GatewayProtocol.CreateWorkflowInstanceWithResultRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: DeployWorkflow(DeployWorkflowRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.DeployWorkflow(DeployWorkflowRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.DeployWorkflow(DeployWorkflowRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: DeployWorkflow(DeployWorkflowRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: DeployWorkflow
    nameWithType: Gateway.GatewayClient.DeployWorkflow
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: DeployWorkflow
    nameWithType: Gateway.GatewayClient.DeployWorkflow
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: DeployWorkflow(DeployWorkflowRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.DeployWorkflow(DeployWorkflowRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
    name: DeployWorkflow
    nameWithType: Gateway.GatewayClient.DeployWorkflow
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
    name: DeployWorkflow
    nameWithType: Gateway.GatewayClient.DeployWorkflow
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflow
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: DeployWorkflowAsync(DeployWorkflowRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.DeployWorkflowAsync(DeployWorkflowRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.DeployWorkflowAsync(DeployWorkflowRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: DeployWorkflowAsync(DeployWorkflowRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: DeployWorkflowAsync
    nameWithType: Gateway.GatewayClient.DeployWorkflowAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: DeployWorkflowAsync
    nameWithType: Gateway.GatewayClient.DeployWorkflowAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: DeployWorkflowAsync(DeployWorkflowRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.DeployWorkflowAsync(DeployWorkflowRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
    name: DeployWorkflowAsync
    nameWithType: Gateway.GatewayClient.DeployWorkflowAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync(GatewayProtocol.DeployWorkflowRequest,grpc.CallOptions)
    name: DeployWorkflowAsync
    nameWithType: Gateway.GatewayClient.DeployWorkflowAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.DeployWorkflowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.DeployWorkflowRequest
    name: DeployWorkflowRequest
    nameWithType: DeployWorkflowRequest
    fullName: GatewayProtocol.DeployWorkflowRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: FailJob(FailJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.FailJob(FailJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.FailJob(FailJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: FailJob(FailJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: FailJob
    nameWithType: Gateway.GatewayClient.FailJob
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: FailJob
    nameWithType: Gateway.GatewayClient.FailJob
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: FailJob(FailJobRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.FailJob(FailJobRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.CallOptions)
    name: FailJob
    nameWithType: Gateway.GatewayClient.FailJob
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJob(GatewayProtocol.FailJobRequest,grpc.CallOptions)
    name: FailJob
    nameWithType: Gateway.GatewayClient.FailJob
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: FailJobAsync(FailJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.FailJobAsync(FailJobRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.FailJobAsync(FailJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: FailJobAsync(FailJobRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: FailJobAsync
    nameWithType: Gateway.GatewayClient.FailJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: FailJobAsync
    nameWithType: Gateway.GatewayClient.FailJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: FailJobAsync(FailJobRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.FailJobAsync(FailJobRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.CallOptions)
    name: FailJobAsync
    nameWithType: Gateway.GatewayClient.FailJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.FailJobAsync(GatewayProtocol.FailJobRequest,grpc.CallOptions)
    name: FailJobAsync
    nameWithType: Gateway.GatewayClient.FailJobAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.FailJobAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.FailJobRequest
    name: FailJobRequest
    nameWithType: FailJobRequest
    fullName: GatewayProtocol.FailJobRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: PublishMessage(PublishMessageRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.PublishMessage(PublishMessageRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.PublishMessage(PublishMessageRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: PublishMessage(PublishMessageRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: PublishMessage
    nameWithType: Gateway.GatewayClient.PublishMessage
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: PublishMessage
    nameWithType: Gateway.GatewayClient.PublishMessage
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: PublishMessage(PublishMessageRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.PublishMessage(PublishMessageRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
    name: PublishMessage
    nameWithType: Gateway.GatewayClient.PublishMessage
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessage(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
    name: PublishMessage
    nameWithType: Gateway.GatewayClient.PublishMessage
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: PublishMessageAsync(PublishMessageRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.PublishMessageAsync(PublishMessageRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.PublishMessageAsync(PublishMessageRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: PublishMessageAsync(PublishMessageRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: PublishMessageAsync
    nameWithType: Gateway.GatewayClient.PublishMessageAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: PublishMessageAsync
    nameWithType: Gateway.GatewayClient.PublishMessageAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: PublishMessageAsync(PublishMessageRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.PublishMessageAsync(PublishMessageRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
    name: PublishMessageAsync
    nameWithType: Gateway.GatewayClient.PublishMessageAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync(GatewayProtocol.PublishMessageRequest,grpc.CallOptions)
    name: PublishMessageAsync
    nameWithType: Gateway.GatewayClient.PublishMessageAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.PublishMessageAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.PublishMessageRequest
    name: PublishMessageRequest
    nameWithType: PublishMessageRequest
    fullName: GatewayProtocol.PublishMessageRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: ResolveIncident(ResolveIncidentRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.ResolveIncident(ResolveIncidentRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.ResolveIncident(ResolveIncidentRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ResolveIncident(ResolveIncidentRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: ResolveIncident
    nameWithType: Gateway.GatewayClient.ResolveIncident
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncident
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: ResolveIncident
    nameWithType: Gateway.GatewayClient.ResolveIncident
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncident
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: ResolveIncident(ResolveIncidentRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.ResolveIncident(ResolveIncidentRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
    name: ResolveIncident
    nameWithType: Gateway.GatewayClient.ResolveIncident
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncident
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncident(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
    name: ResolveIncident
    nameWithType: Gateway.GatewayClient.ResolveIncident
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncident
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: ResolveIncidentAsync(ResolveIncidentRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.ResolveIncidentAsync(ResolveIncidentRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.ResolveIncidentAsync(ResolveIncidentRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ResolveIncidentAsync(ResolveIncidentRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: ResolveIncidentAsync
    nameWithType: Gateway.GatewayClient.ResolveIncidentAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: ResolveIncidentAsync
    nameWithType: Gateway.GatewayClient.ResolveIncidentAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: ResolveIncidentAsync(ResolveIncidentRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.ResolveIncidentAsync(ResolveIncidentRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
    name: ResolveIncidentAsync
    nameWithType: Gateway.GatewayClient.ResolveIncidentAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync(GatewayProtocol.ResolveIncidentRequest,grpc.CallOptions)
    name: ResolveIncidentAsync
    nameWithType: Gateway.GatewayClient.ResolveIncidentAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.ResolveIncidentAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: SetVariables(SetVariablesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.SetVariables(SetVariablesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.SetVariables(SetVariablesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: SetVariables(SetVariablesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: SetVariables
    nameWithType: Gateway.GatewayClient.SetVariables
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: SetVariables
    nameWithType: Gateway.GatewayClient.SetVariables
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: SetVariables(SetVariablesRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.SetVariables(SetVariablesRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
    name: SetVariables
    nameWithType: Gateway.GatewayClient.SetVariables
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariables(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
    name: SetVariables
    nameWithType: Gateway.GatewayClient.SetVariables
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: SetVariablesAsync(SetVariablesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.SetVariablesAsync(SetVariablesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.SetVariablesAsync(SetVariablesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: SetVariablesAsync(SetVariablesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: SetVariablesAsync
    nameWithType: Gateway.GatewayClient.SetVariablesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: SetVariablesAsync
    nameWithType: Gateway.GatewayClient.SetVariablesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: SetVariablesAsync(SetVariablesRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.SetVariablesAsync(SetVariablesRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
    name: SetVariablesAsync
    nameWithType: Gateway.GatewayClient.SetVariablesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync(GatewayProtocol.SetVariablesRequest,grpc.CallOptions)
    name: SetVariablesAsync
    nameWithType: Gateway.GatewayClient.SetVariablesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.SetVariablesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.SetVariablesRequest
    name: SetVariablesRequest
    nameWithType: SetVariablesRequest
    fullName: GatewayProtocol.SetVariablesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: Topology(TopologyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.Topology(TopologyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.Topology(TopologyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Topology(TopologyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: Topology
    nameWithType: Gateway.GatewayClient.Topology
    fullName: GatewayProtocol.Gateway.GatewayClient.Topology
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: Topology
    nameWithType: Gateway.GatewayClient.Topology
    fullName: GatewayProtocol.Gateway.GatewayClient.Topology
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: Topology(TopologyRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.Topology(TopologyRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.CallOptions)
    name: Topology
    nameWithType: Gateway.GatewayClient.Topology
    fullName: GatewayProtocol.Gateway.GatewayClient.Topology
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.Topology(GatewayProtocol.TopologyRequest,grpc.CallOptions)
    name: Topology
    nameWithType: Gateway.GatewayClient.Topology
    fullName: GatewayProtocol.Gateway.GatewayClient.Topology
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: TopologyAsync(TopologyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.TopologyAsync(TopologyRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.TopologyAsync(TopologyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: TopologyAsync(TopologyRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: TopologyAsync
    nameWithType: Gateway.GatewayClient.TopologyAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.TopologyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: TopologyAsync
    nameWithType: Gateway.GatewayClient.TopologyAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.TopologyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: TopologyAsync(TopologyRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.TopologyAsync(TopologyRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.CallOptions)
    name: TopologyAsync
    nameWithType: Gateway.GatewayClient.TopologyAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.TopologyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.TopologyAsync(GatewayProtocol.TopologyRequest,grpc.CallOptions)
    name: TopologyAsync
    nameWithType: Gateway.GatewayClient.TopologyAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.TopologyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.TopologyRequest
    name: TopologyRequest
    nameWithType: TopologyRequest
    fullName: GatewayProtocol.TopologyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: UpdateJobRetries(UpdateJobRetriesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.UpdateJobRetries(UpdateJobRetriesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.UpdateJobRetries(UpdateJobRetriesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UpdateJobRetries(UpdateJobRetriesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: UpdateJobRetries
    nameWithType: Gateway.GatewayClient.UpdateJobRetries
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: UpdateJobRetries
    nameWithType: Gateway.GatewayClient.UpdateJobRetries
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: UpdateJobRetries(UpdateJobRetriesRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.UpdateJobRetries(UpdateJobRetriesRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
    name: UpdateJobRetries
    nameWithType: Gateway.GatewayClient.UpdateJobRetries
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
    name: UpdateJobRetries
    nameWithType: Gateway.GatewayClient.UpdateJobRetries
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetries
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: UpdateJobRetriesAsync(UpdateJobRetriesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Gateway.GatewayClient.UpdateJobRetriesAsync(UpdateJobRetriesRequest, grpc.Metadata, Nullable<DateTime>, CancellationToken)
  fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest, grpc.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  nameWithType.vb: Gateway.GatewayClient.UpdateJobRetriesAsync(UpdateJobRetriesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  fullName.vb: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest, grpc.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UpdateJobRetriesAsync(UpdateJobRetriesRequest, grpc.Metadata, Nullable(Of DateTime), CancellationToken)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: UpdateJobRetriesAsync
    nameWithType: Gateway.GatewayClient.UpdateJobRetriesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
    name: UpdateJobRetriesAsync
    nameWithType: Gateway.GatewayClient.UpdateJobRetriesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.Metadata
    name: grpc.Metadata
    nameWithType: grpc.Metadata
    fullName: grpc.Metadata
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: UpdateJobRetriesAsync(UpdateJobRetriesRequest, grpc.CallOptions)
  nameWithType: Gateway.GatewayClient.UpdateJobRetriesAsync(UpdateJobRetriesRequest, grpc.CallOptions)
  fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest, grpc.CallOptions)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
    name: UpdateJobRetriesAsync
    nameWithType: Gateway.GatewayClient.UpdateJobRetriesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync(GatewayProtocol.UpdateJobRetriesRequest,grpc.CallOptions)
    name: UpdateJobRetriesAsync
    nameWithType: Gateway.GatewayClient.UpdateJobRetriesAsync
    fullName: GatewayProtocol.Gateway.GatewayClient.UpdateJobRetriesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: GatewayProtocol.UpdateJobRetriesRequest
    name: UpdateJobRetriesRequest
    nameWithType: UpdateJobRetriesRequest
    fullName: GatewayProtocol.UpdateJobRetriesRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: grpc.CallOptions
    name: grpc.CallOptions
    nameWithType: grpc.CallOptions
    fullName: grpc.CallOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GatewayProtocol.ClosedGatewayClient.ActivateJobs*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.ActivateJobs
  name: ActivateJobs
  nameWithType: ClosedGatewayClient.ActivateJobs
  fullName: GatewayProtocol.ClosedGatewayClient.ActivateJobs
- uid: GatewayProtocol.ActivateJobsRequest
  commentId: T:GatewayProtocol.ActivateJobsRequest
  parent: GatewayProtocol
  name: ActivateJobsRequest
  nameWithType: ActivateJobsRequest
  fullName: GatewayProtocol.ActivateJobsRequest
- uid: Metadata
  isExternal: true
  name: Metadata
  nameWithType: Metadata
  fullName: Metadata
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: AsyncServerStreamingCall{GatewayProtocol.ActivateJobsResponse}
  commentId: '!:AsyncServerStreamingCall{GatewayProtocol.ActivateJobsResponse}'
  definition: AsyncServerStreamingCall`1
  name: AsyncServerStreamingCall<ActivateJobsResponse>
  nameWithType: AsyncServerStreamingCall<ActivateJobsResponse>
  fullName: AsyncServerStreamingCall<GatewayProtocol.ActivateJobsResponse>
  nameWithType.vb: AsyncServerStreamingCall(Of ActivateJobsResponse)
  fullName.vb: AsyncServerStreamingCall(Of GatewayProtocol.ActivateJobsResponse)
  name.vb: AsyncServerStreamingCall(Of ActivateJobsResponse)
  spec.csharp:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.ActivateJobsResponse
    name: ActivateJobsResponse
    nameWithType: ActivateJobsResponse
    fullName: GatewayProtocol.ActivateJobsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.ActivateJobsResponse
    name: ActivateJobsResponse
    nameWithType: ActivateJobsResponse
    fullName: GatewayProtocol.ActivateJobsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AsyncServerStreamingCall`1
  isExternal: true
  name: AsyncServerStreamingCall<>
  nameWithType: AsyncServerStreamingCall<>
  fullName: AsyncServerStreamingCall<>
  nameWithType.vb: AsyncServerStreamingCall(Of )
  fullName.vb: AsyncServerStreamingCall(Of )
  name.vb: AsyncServerStreamingCall(Of )
  spec.csharp:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CallOptions
  isExternal: true
  name: CallOptions
  nameWithType: CallOptions
  fullName: CallOptions
- uid: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance
  name: CancelWorkflowInstance
  nameWithType: ClosedGatewayClient.CancelWorkflowInstance
  fullName: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstance
- uid: GatewayProtocol.CancelWorkflowInstanceRequest
  commentId: T:GatewayProtocol.CancelWorkflowInstanceRequest
  parent: GatewayProtocol
  name: CancelWorkflowInstanceRequest
  nameWithType: CancelWorkflowInstanceRequest
  fullName: GatewayProtocol.CancelWorkflowInstanceRequest
- uid: GatewayProtocol.CancelWorkflowInstanceResponse
  commentId: T:GatewayProtocol.CancelWorkflowInstanceResponse
  parent: GatewayProtocol
  name: CancelWorkflowInstanceResponse
  nameWithType: CancelWorkflowInstanceResponse
  fullName: GatewayProtocol.CancelWorkflowInstanceResponse
- uid: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync
  name: CancelWorkflowInstanceAsync
  nameWithType: ClosedGatewayClient.CancelWorkflowInstanceAsync
  fullName: GatewayProtocol.ClosedGatewayClient.CancelWorkflowInstanceAsync
- uid: AsyncUnaryCall{GatewayProtocol.CancelWorkflowInstanceResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.CancelWorkflowInstanceResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<CancelWorkflowInstanceResponse>
  nameWithType: AsyncUnaryCall<CancelWorkflowInstanceResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.CancelWorkflowInstanceResponse>
  nameWithType.vb: AsyncUnaryCall(Of CancelWorkflowInstanceResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.CancelWorkflowInstanceResponse)
  name.vb: AsyncUnaryCall(Of CancelWorkflowInstanceResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.CancelWorkflowInstanceResponse
    name: CancelWorkflowInstanceResponse
    nameWithType: CancelWorkflowInstanceResponse
    fullName: GatewayProtocol.CancelWorkflowInstanceResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.CancelWorkflowInstanceResponse
    name: CancelWorkflowInstanceResponse
    nameWithType: CancelWorkflowInstanceResponse
    fullName: GatewayProtocol.CancelWorkflowInstanceResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: AsyncUnaryCall`1
  isExternal: true
  name: AsyncUnaryCall<>
  nameWithType: AsyncUnaryCall<>
  fullName: AsyncUnaryCall<>
  nameWithType.vb: AsyncUnaryCall(Of )
  fullName.vb: AsyncUnaryCall(Of )
  name.vb: AsyncUnaryCall(Of )
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.CompleteJob*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.CompleteJob
  name: CompleteJob
  nameWithType: ClosedGatewayClient.CompleteJob
  fullName: GatewayProtocol.ClosedGatewayClient.CompleteJob
- uid: GatewayProtocol.CompleteJobRequest
  commentId: T:GatewayProtocol.CompleteJobRequest
  parent: GatewayProtocol
  name: CompleteJobRequest
  nameWithType: CompleteJobRequest
  fullName: GatewayProtocol.CompleteJobRequest
- uid: GatewayProtocol.CompleteJobResponse
  commentId: T:GatewayProtocol.CompleteJobResponse
  parent: GatewayProtocol
  name: CompleteJobResponse
  nameWithType: CompleteJobResponse
  fullName: GatewayProtocol.CompleteJobResponse
- uid: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.CompleteJobAsync
  name: CompleteJobAsync
  nameWithType: ClosedGatewayClient.CompleteJobAsync
  fullName: GatewayProtocol.ClosedGatewayClient.CompleteJobAsync
- uid: AsyncUnaryCall{GatewayProtocol.CompleteJobResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.CompleteJobResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<CompleteJobResponse>
  nameWithType: AsyncUnaryCall<CompleteJobResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.CompleteJobResponse>
  nameWithType.vb: AsyncUnaryCall(Of CompleteJobResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.CompleteJobResponse)
  name.vb: AsyncUnaryCall(Of CompleteJobResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.CompleteJobResponse
    name: CompleteJobResponse
    nameWithType: CompleteJobResponse
    fullName: GatewayProtocol.CompleteJobResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.CompleteJobResponse
    name: CompleteJobResponse
    nameWithType: CompleteJobResponse
    fullName: GatewayProtocol.CompleteJobResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance
  name: CreateWorkflowInstance
  nameWithType: ClosedGatewayClient.CreateWorkflowInstance
  fullName: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstance
- uid: GatewayProtocol.CreateWorkflowInstanceRequest
  commentId: T:GatewayProtocol.CreateWorkflowInstanceRequest
  parent: GatewayProtocol
  name: CreateWorkflowInstanceRequest
  nameWithType: CreateWorkflowInstanceRequest
  fullName: GatewayProtocol.CreateWorkflowInstanceRequest
- uid: GatewayProtocol.CreateWorkflowInstanceResponse
  commentId: T:GatewayProtocol.CreateWorkflowInstanceResponse
  parent: GatewayProtocol
  name: CreateWorkflowInstanceResponse
  nameWithType: CreateWorkflowInstanceResponse
  fullName: GatewayProtocol.CreateWorkflowInstanceResponse
- uid: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync
  name: CreateWorkflowInstanceAsync
  nameWithType: ClosedGatewayClient.CreateWorkflowInstanceAsync
  fullName: GatewayProtocol.ClosedGatewayClient.CreateWorkflowInstanceAsync
- uid: AsyncUnaryCall{GatewayProtocol.CreateWorkflowInstanceResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.CreateWorkflowInstanceResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<CreateWorkflowInstanceResponse>
  nameWithType: AsyncUnaryCall<CreateWorkflowInstanceResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.CreateWorkflowInstanceResponse>
  nameWithType.vb: AsyncUnaryCall(Of CreateWorkflowInstanceResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.CreateWorkflowInstanceResponse)
  name.vb: AsyncUnaryCall(Of CreateWorkflowInstanceResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.CreateWorkflowInstanceResponse
    name: CreateWorkflowInstanceResponse
    nameWithType: CreateWorkflowInstanceResponse
    fullName: GatewayProtocol.CreateWorkflowInstanceResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.CreateWorkflowInstanceResponse
    name: CreateWorkflowInstanceResponse
    nameWithType: CreateWorkflowInstanceResponse
    fullName: GatewayProtocol.CreateWorkflowInstanceResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.DeployWorkflow*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.DeployWorkflow
  name: DeployWorkflow
  nameWithType: ClosedGatewayClient.DeployWorkflow
  fullName: GatewayProtocol.ClosedGatewayClient.DeployWorkflow
- uid: GatewayProtocol.DeployWorkflowRequest
  commentId: T:GatewayProtocol.DeployWorkflowRequest
  parent: GatewayProtocol
  name: DeployWorkflowRequest
  nameWithType: DeployWorkflowRequest
  fullName: GatewayProtocol.DeployWorkflowRequest
- uid: GatewayProtocol.DeployWorkflowResponse
  commentId: T:GatewayProtocol.DeployWorkflowResponse
  parent: GatewayProtocol
  name: DeployWorkflowResponse
  nameWithType: DeployWorkflowResponse
  fullName: GatewayProtocol.DeployWorkflowResponse
- uid: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync
  name: DeployWorkflowAsync
  nameWithType: ClosedGatewayClient.DeployWorkflowAsync
  fullName: GatewayProtocol.ClosedGatewayClient.DeployWorkflowAsync
- uid: AsyncUnaryCall{GatewayProtocol.DeployWorkflowResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.DeployWorkflowResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<DeployWorkflowResponse>
  nameWithType: AsyncUnaryCall<DeployWorkflowResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.DeployWorkflowResponse>
  nameWithType.vb: AsyncUnaryCall(Of DeployWorkflowResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.DeployWorkflowResponse)
  name.vb: AsyncUnaryCall(Of DeployWorkflowResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.DeployWorkflowResponse
    name: DeployWorkflowResponse
    nameWithType: DeployWorkflowResponse
    fullName: GatewayProtocol.DeployWorkflowResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.DeployWorkflowResponse
    name: DeployWorkflowResponse
    nameWithType: DeployWorkflowResponse
    fullName: GatewayProtocol.DeployWorkflowResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.FailJob*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.FailJob
  name: FailJob
  nameWithType: ClosedGatewayClient.FailJob
  fullName: GatewayProtocol.ClosedGatewayClient.FailJob
- uid: GatewayProtocol.FailJobRequest
  commentId: T:GatewayProtocol.FailJobRequest
  parent: GatewayProtocol
  name: FailJobRequest
  nameWithType: FailJobRequest
  fullName: GatewayProtocol.FailJobRequest
- uid: GatewayProtocol.FailJobResponse
  commentId: T:GatewayProtocol.FailJobResponse
  parent: GatewayProtocol
  name: FailJobResponse
  nameWithType: FailJobResponse
  fullName: GatewayProtocol.FailJobResponse
- uid: GatewayProtocol.ClosedGatewayClient.FailJobAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.FailJobAsync
  name: FailJobAsync
  nameWithType: ClosedGatewayClient.FailJobAsync
  fullName: GatewayProtocol.ClosedGatewayClient.FailJobAsync
- uid: AsyncUnaryCall{GatewayProtocol.FailJobResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.FailJobResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<FailJobResponse>
  nameWithType: AsyncUnaryCall<FailJobResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.FailJobResponse>
  nameWithType.vb: AsyncUnaryCall(Of FailJobResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.FailJobResponse)
  name.vb: AsyncUnaryCall(Of FailJobResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.FailJobResponse
    name: FailJobResponse
    nameWithType: FailJobResponse
    fullName: GatewayProtocol.FailJobResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.FailJobResponse
    name: FailJobResponse
    nameWithType: FailJobResponse
    fullName: GatewayProtocol.FailJobResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.PublishMessage*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.PublishMessage
  name: PublishMessage
  nameWithType: ClosedGatewayClient.PublishMessage
  fullName: GatewayProtocol.ClosedGatewayClient.PublishMessage
- uid: GatewayProtocol.PublishMessageRequest
  commentId: T:GatewayProtocol.PublishMessageRequest
  parent: GatewayProtocol
  name: PublishMessageRequest
  nameWithType: PublishMessageRequest
  fullName: GatewayProtocol.PublishMessageRequest
- uid: GatewayProtocol.PublishMessageResponse
  commentId: T:GatewayProtocol.PublishMessageResponse
  parent: GatewayProtocol
  name: PublishMessageResponse
  nameWithType: PublishMessageResponse
  fullName: GatewayProtocol.PublishMessageResponse
- uid: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.PublishMessageAsync
  name: PublishMessageAsync
  nameWithType: ClosedGatewayClient.PublishMessageAsync
  fullName: GatewayProtocol.ClosedGatewayClient.PublishMessageAsync
- uid: AsyncUnaryCall{GatewayProtocol.PublishMessageResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.PublishMessageResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<PublishMessageResponse>
  nameWithType: AsyncUnaryCall<PublishMessageResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.PublishMessageResponse>
  nameWithType.vb: AsyncUnaryCall(Of PublishMessageResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.PublishMessageResponse)
  name.vb: AsyncUnaryCall(Of PublishMessageResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.PublishMessageResponse
    name: PublishMessageResponse
    nameWithType: PublishMessageResponse
    fullName: GatewayProtocol.PublishMessageResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.PublishMessageResponse
    name: PublishMessageResponse
    nameWithType: PublishMessageResponse
    fullName: GatewayProtocol.PublishMessageResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.ResolveIncident*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.ResolveIncident
  name: ResolveIncident
  nameWithType: ClosedGatewayClient.ResolveIncident
  fullName: GatewayProtocol.ClosedGatewayClient.ResolveIncident
- uid: GatewayProtocol.ResolveIncidentRequest
  commentId: T:GatewayProtocol.ResolveIncidentRequest
  parent: GatewayProtocol
  name: ResolveIncidentRequest
  nameWithType: ResolveIncidentRequest
  fullName: GatewayProtocol.ResolveIncidentRequest
- uid: GatewayProtocol.ResolveIncidentResponse
  commentId: T:GatewayProtocol.ResolveIncidentResponse
  parent: GatewayProtocol
  name: ResolveIncidentResponse
  nameWithType: ResolveIncidentResponse
  fullName: GatewayProtocol.ResolveIncidentResponse
- uid: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync
  name: ResolveIncidentAsync
  nameWithType: ClosedGatewayClient.ResolveIncidentAsync
  fullName: GatewayProtocol.ClosedGatewayClient.ResolveIncidentAsync
- uid: AsyncUnaryCall{GatewayProtocol.ResolveIncidentResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.ResolveIncidentResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<ResolveIncidentResponse>
  nameWithType: AsyncUnaryCall<ResolveIncidentResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.ResolveIncidentResponse>
  nameWithType.vb: AsyncUnaryCall(Of ResolveIncidentResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.ResolveIncidentResponse)
  name.vb: AsyncUnaryCall(Of ResolveIncidentResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.ResolveIncidentResponse
    name: ResolveIncidentResponse
    nameWithType: ResolveIncidentResponse
    fullName: GatewayProtocol.ResolveIncidentResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.ResolveIncidentResponse
    name: ResolveIncidentResponse
    nameWithType: ResolveIncidentResponse
    fullName: GatewayProtocol.ResolveIncidentResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.SetVariables*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.SetVariables
  name: SetVariables
  nameWithType: ClosedGatewayClient.SetVariables
  fullName: GatewayProtocol.ClosedGatewayClient.SetVariables
- uid: GatewayProtocol.SetVariablesRequest
  commentId: T:GatewayProtocol.SetVariablesRequest
  parent: GatewayProtocol
  name: SetVariablesRequest
  nameWithType: SetVariablesRequest
  fullName: GatewayProtocol.SetVariablesRequest
- uid: GatewayProtocol.SetVariablesResponse
  commentId: T:GatewayProtocol.SetVariablesResponse
  parent: GatewayProtocol
  name: SetVariablesResponse
  nameWithType: SetVariablesResponse
  fullName: GatewayProtocol.SetVariablesResponse
- uid: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.SetVariablesAsync
  name: SetVariablesAsync
  nameWithType: ClosedGatewayClient.SetVariablesAsync
  fullName: GatewayProtocol.ClosedGatewayClient.SetVariablesAsync
- uid: AsyncUnaryCall{GatewayProtocol.SetVariablesResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.SetVariablesResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<SetVariablesResponse>
  nameWithType: AsyncUnaryCall<SetVariablesResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.SetVariablesResponse>
  nameWithType.vb: AsyncUnaryCall(Of SetVariablesResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.SetVariablesResponse)
  name.vb: AsyncUnaryCall(Of SetVariablesResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.SetVariablesResponse
    name: SetVariablesResponse
    nameWithType: SetVariablesResponse
    fullName: GatewayProtocol.SetVariablesResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.SetVariablesResponse
    name: SetVariablesResponse
    nameWithType: SetVariablesResponse
    fullName: GatewayProtocol.SetVariablesResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.Topology*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.Topology
  name: Topology
  nameWithType: ClosedGatewayClient.Topology
  fullName: GatewayProtocol.ClosedGatewayClient.Topology
- uid: GatewayProtocol.TopologyRequest
  commentId: T:GatewayProtocol.TopologyRequest
  parent: GatewayProtocol
  name: TopologyRequest
  nameWithType: TopologyRequest
  fullName: GatewayProtocol.TopologyRequest
- uid: GatewayProtocol.TopologyResponse
  commentId: T:GatewayProtocol.TopologyResponse
  parent: GatewayProtocol
  name: TopologyResponse
  nameWithType: TopologyResponse
  fullName: GatewayProtocol.TopologyResponse
- uid: GatewayProtocol.ClosedGatewayClient.TopologyAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.TopologyAsync
  name: TopologyAsync
  nameWithType: ClosedGatewayClient.TopologyAsync
  fullName: GatewayProtocol.ClosedGatewayClient.TopologyAsync
- uid: AsyncUnaryCall{GatewayProtocol.TopologyResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.TopologyResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<TopologyResponse>
  nameWithType: AsyncUnaryCall<TopologyResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.TopologyResponse>
  nameWithType.vb: AsyncUnaryCall(Of TopologyResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.TopologyResponse)
  name.vb: AsyncUnaryCall(Of TopologyResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.TopologyResponse
    name: TopologyResponse
    nameWithType: TopologyResponse
    fullName: GatewayProtocol.TopologyResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.TopologyResponse
    name: TopologyResponse
    nameWithType: TopologyResponse
    fullName: GatewayProtocol.TopologyResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.UpdateJobRetries
  name: UpdateJobRetries
  nameWithType: ClosedGatewayClient.UpdateJobRetries
  fullName: GatewayProtocol.ClosedGatewayClient.UpdateJobRetries
- uid: GatewayProtocol.UpdateJobRetriesRequest
  commentId: T:GatewayProtocol.UpdateJobRetriesRequest
  parent: GatewayProtocol
  name: UpdateJobRetriesRequest
  nameWithType: UpdateJobRetriesRequest
  fullName: GatewayProtocol.UpdateJobRetriesRequest
- uid: GatewayProtocol.UpdateJobRetriesResponse
  commentId: T:GatewayProtocol.UpdateJobRetriesResponse
  parent: GatewayProtocol
  name: UpdateJobRetriesResponse
  nameWithType: UpdateJobRetriesResponse
  fullName: GatewayProtocol.UpdateJobRetriesResponse
- uid: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync
  name: UpdateJobRetriesAsync
  nameWithType: ClosedGatewayClient.UpdateJobRetriesAsync
  fullName: GatewayProtocol.ClosedGatewayClient.UpdateJobRetriesAsync
- uid: AsyncUnaryCall{GatewayProtocol.UpdateJobRetriesResponse}
  commentId: '!:AsyncUnaryCall{GatewayProtocol.UpdateJobRetriesResponse}'
  definition: AsyncUnaryCall`1
  name: AsyncUnaryCall<UpdateJobRetriesResponse>
  nameWithType: AsyncUnaryCall<UpdateJobRetriesResponse>
  fullName: AsyncUnaryCall<GatewayProtocol.UpdateJobRetriesResponse>
  nameWithType.vb: AsyncUnaryCall(Of UpdateJobRetriesResponse)
  fullName.vb: AsyncUnaryCall(Of GatewayProtocol.UpdateJobRetriesResponse)
  name.vb: AsyncUnaryCall(Of UpdateJobRetriesResponse)
  spec.csharp:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.UpdateJobRetriesResponse
    name: UpdateJobRetriesResponse
    nameWithType: UpdateJobRetriesResponse
    fullName: GatewayProtocol.UpdateJobRetriesResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.UpdateJobRetriesResponse
    name: UpdateJobRetriesResponse
    nameWithType: UpdateJobRetriesResponse
    fullName: GatewayProtocol.UpdateJobRetriesResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
  commentId: M:GatewayProtocol.Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
  parent: GatewayProtocol.Gateway.GatewayClient
  isExternal: true
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
  fullName: GatewayProtocol.Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
  spec.csharp:
  - uid: GatewayProtocol.Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
    name: NewInstance
    nameWithType: Gateway.GatewayClient.NewInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.NewInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: ClientBaseConfiguration
    name: ClientBaseConfiguration
    nameWithType: ClientBaseConfiguration
    fullName: ClientBaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GatewayProtocol.Gateway.GatewayClient.NewInstance(ClientBaseConfiguration)
    name: NewInstance
    nameWithType: Gateway.GatewayClient.NewInstance
    fullName: GatewayProtocol.Gateway.GatewayClient.NewInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: ClientBaseConfiguration
    name: ClientBaseConfiguration
    nameWithType: ClientBaseConfiguration
    fullName: ClientBaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ClosedGatewayClient.NewInstance*
  commentId: Overload:GatewayProtocol.ClosedGatewayClient.NewInstance
  name: NewInstance
  nameWithType: ClosedGatewayClient.NewInstance
  fullName: GatewayProtocol.ClosedGatewayClient.NewInstance
- uid: ClientBaseConfiguration
  isExternal: true
  name: ClientBaseConfiguration
  nameWithType: ClientBaseConfiguration
  fullName: ClientBaseConfiguration
