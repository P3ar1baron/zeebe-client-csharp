### YamlMime:ManagedReference
items:
- uid: GatewayProtocol.ResolveIncidentRequest
  commentId: T:GatewayProtocol.ResolveIncidentRequest
  id: ResolveIncidentRequest
  parent: GatewayProtocol
  children:
  - GatewayProtocol.ResolveIncidentRequest.#ctor
  - GatewayProtocol.ResolveIncidentRequest.#ctor(GatewayProtocol.ResolveIncidentRequest)
  - GatewayProtocol.ResolveIncidentRequest.CalculateSize
  - GatewayProtocol.ResolveIncidentRequest.Clone
  - GatewayProtocol.ResolveIncidentRequest.Descriptor
  - GatewayProtocol.ResolveIncidentRequest.Equals(GatewayProtocol.ResolveIncidentRequest)
  - GatewayProtocol.ResolveIncidentRequest.Equals(System.Object)
  - GatewayProtocol.ResolveIncidentRequest.GetHashCode
  - GatewayProtocol.ResolveIncidentRequest.IncidentKey
  - GatewayProtocol.ResolveIncidentRequest.IncidentKeyFieldNumber
  - GatewayProtocol.ResolveIncidentRequest.MergeFrom(GatewayProtocol.ResolveIncidentRequest)
  - GatewayProtocol.ResolveIncidentRequest.MergeFrom(pb.CodedInputStream)
  - GatewayProtocol.ResolveIncidentRequest.Parser
  - GatewayProtocol.ResolveIncidentRequest.ToString
  - GatewayProtocol.ResolveIncidentRequest.WriteTo(pb.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: ResolveIncidentRequest
  nameWithType: ResolveIncidentRequest
  fullName: GatewayProtocol.ResolveIncidentRequest
  type: Class
  source:
    id: ResolveIncidentRequest
    path: ''
    startLine: 6251
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: 'public sealed class ResolveIncidentRequest : pb.IMessage<ResolveIncidentRequest>'
    content.vb: >-
      Public NotInheritable Class ResolveIncidentRequest
          Inherits pb.IMessage(Of ResolveIncidentRequest)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: GatewayProtocol.ResolveIncidentRequest.Parser
  commentId: P:GatewayProtocol.ResolveIncidentRequest.Parser
  id: Parser
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: ResolveIncidentRequest.Parser
  fullName: GatewayProtocol.ResolveIncidentRequest.Parser
  type: Property
  source:
    id: Parser
    path: ''
    startLine: 6254
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public static pb.MessageParser<ResolveIncidentRequest> Parser { get; }
    parameters: []
    return:
      type: pb.MessageParser{GatewayProtocol.ResolveIncidentRequest}
    content.vb: Public Shared ReadOnly Property Parser As pb.MessageParser(Of ResolveIncidentRequest)
  overload: GatewayProtocol.ResolveIncidentRequest.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GatewayProtocol.ResolveIncidentRequest.Descriptor
  commentId: P:GatewayProtocol.ResolveIncidentRequest.Descriptor
  id: Descriptor
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: ResolveIncidentRequest.Descriptor
  fullName: GatewayProtocol.ResolveIncidentRequest.Descriptor
  type: Property
  source:
    id: Descriptor
    path: ''
    startLine: 6257
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public static pbr.MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: pbr.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As pbr.MessageDescriptor
  overload: GatewayProtocol.ResolveIncidentRequest.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GatewayProtocol.ResolveIncidentRequest.#ctor
  commentId: M:GatewayProtocol.ResolveIncidentRequest.#ctor
  id: '#ctor'
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: ResolveIncidentRequest()
  nameWithType: ResolveIncidentRequest.ResolveIncidentRequest()
  fullName: GatewayProtocol.ResolveIncidentRequest.ResolveIncidentRequest()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6267
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public ResolveIncidentRequest()
    content.vb: Public Sub New
  overload: GatewayProtocol.ResolveIncidentRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.#ctor(GatewayProtocol.ResolveIncidentRequest)
  commentId: M:GatewayProtocol.ResolveIncidentRequest.#ctor(GatewayProtocol.ResolveIncidentRequest)
  id: '#ctor(GatewayProtocol.ResolveIncidentRequest)'
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: ResolveIncidentRequest(ResolveIncidentRequest)
  nameWithType: ResolveIncidentRequest.ResolveIncidentRequest(ResolveIncidentRequest)
  fullName: GatewayProtocol.ResolveIncidentRequest.ResolveIncidentRequest(GatewayProtocol.ResolveIncidentRequest)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6274
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public ResolveIncidentRequest(ResolveIncidentRequest other)
    parameters:
    - id: other
      type: GatewayProtocol.ResolveIncidentRequest
    content.vb: Public Sub New(other As ResolveIncidentRequest)
  overload: GatewayProtocol.ResolveIncidentRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.Clone
  commentId: M:GatewayProtocol.ResolveIncidentRequest.Clone
  id: Clone
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ResolveIncidentRequest.Clone()
  fullName: GatewayProtocol.ResolveIncidentRequest.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 6280
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public ResolveIncidentRequest Clone()
    return:
      type: GatewayProtocol.ResolveIncidentRequest
    content.vb: Public Function Clone As ResolveIncidentRequest
  overload: GatewayProtocol.ResolveIncidentRequest.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.IncidentKeyFieldNumber
  commentId: F:GatewayProtocol.ResolveIncidentRequest.IncidentKeyFieldNumber
  id: IncidentKeyFieldNumber
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: IncidentKeyFieldNumber
  nameWithType: ResolveIncidentRequest.IncidentKeyFieldNumber
  fullName: GatewayProtocol.ResolveIncidentRequest.IncidentKeyFieldNumber
  type: Field
  source:
    id: IncidentKeyFieldNumber
    path: ''
    startLine: 6286
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: Field number for the &quot;incidentKey&quot; field.
  example: []
  syntax:
    content: public const int IncidentKeyFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const IncidentKeyFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: GatewayProtocol.ResolveIncidentRequest.IncidentKey
  commentId: P:GatewayProtocol.ResolveIncidentRequest.IncidentKey
  id: IncidentKey
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: IncidentKey
  nameWithType: ResolveIncidentRequest.IncidentKey
  fullName: GatewayProtocol.ResolveIncidentRequest.IncidentKey
  type: Property
  source:
    id: IncidentKey
    path: ''
    startLine: 6291
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  summary: "\nthe unique ID of the incident to resolve\n"
  example: []
  syntax:
    content: public long IncidentKey { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property IncidentKey As Long
  overload: GatewayProtocol.ResolveIncidentRequest.IncidentKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.Equals(System.Object)
  commentId: M:GatewayProtocol.ResolveIncidentRequest.Equals(System.Object)
  id: Equals(System.Object)
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ResolveIncidentRequest.Equals(Object)
  fullName: GatewayProtocol.ResolveIncidentRequest.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 6299
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: GatewayProtocol.ResolveIncidentRequest.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ResolveIncidentRequest.Equals(GatewayProtocol.ResolveIncidentRequest)
  commentId: M:GatewayProtocol.ResolveIncidentRequest.Equals(GatewayProtocol.ResolveIncidentRequest)
  id: Equals(GatewayProtocol.ResolveIncidentRequest)
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: Equals(ResolveIncidentRequest)
  nameWithType: ResolveIncidentRequest.Equals(ResolveIncidentRequest)
  fullName: GatewayProtocol.ResolveIncidentRequest.Equals(GatewayProtocol.ResolveIncidentRequest)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 6304
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public bool Equals(ResolveIncidentRequest other)
    parameters:
    - id: other
      type: GatewayProtocol.ResolveIncidentRequest
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ResolveIncidentRequest) As Boolean
  overload: GatewayProtocol.ResolveIncidentRequest.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.GetHashCode
  commentId: M:GatewayProtocol.ResolveIncidentRequest.GetHashCode
  id: GetHashCode
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ResolveIncidentRequest.GetHashCode()
  fullName: GatewayProtocol.ResolveIncidentRequest.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 6316
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: GatewayProtocol.ResolveIncidentRequest.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ResolveIncidentRequest.ToString
  commentId: M:GatewayProtocol.ResolveIncidentRequest.ToString
  id: ToString
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ResolveIncidentRequest.ToString()
  fullName: GatewayProtocol.ResolveIncidentRequest.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 6326
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: GatewayProtocol.ResolveIncidentRequest.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GatewayProtocol.ResolveIncidentRequest.WriteTo(pb.CodedOutputStream)
  commentId: M:GatewayProtocol.ResolveIncidentRequest.WriteTo(pb.CodedOutputStream)
  id: WriteTo(pb.CodedOutputStream)
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: WriteTo(pb.CodedOutputStream)
  nameWithType: ResolveIncidentRequest.WriteTo(pb.CodedOutputStream)
  fullName: GatewayProtocol.ResolveIncidentRequest.WriteTo(pb.CodedOutputStream)
  type: Method
  source:
    id: WriteTo
    path: ''
    startLine: 6331
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void WriteTo(pb.CodedOutputStream output)
    parameters:
    - id: output
      type: pb.CodedOutputStream
    content.vb: Public Sub WriteTo(output As pb.CodedOutputStream)
  overload: GatewayProtocol.ResolveIncidentRequest.WriteTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.CalculateSize
  commentId: M:GatewayProtocol.ResolveIncidentRequest.CalculateSize
  id: CalculateSize
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: ResolveIncidentRequest.CalculateSize()
  fullName: GatewayProtocol.ResolveIncidentRequest.CalculateSize()
  type: Method
  source:
    id: CalculateSize
    path: ''
    startLine: 6342
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: GatewayProtocol.ResolveIncidentRequest.CalculateSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.MergeFrom(GatewayProtocol.ResolveIncidentRequest)
  commentId: M:GatewayProtocol.ResolveIncidentRequest.MergeFrom(GatewayProtocol.ResolveIncidentRequest)
  id: MergeFrom(GatewayProtocol.ResolveIncidentRequest)
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(ResolveIncidentRequest)
  nameWithType: ResolveIncidentRequest.MergeFrom(ResolveIncidentRequest)
  fullName: GatewayProtocol.ResolveIncidentRequest.MergeFrom(GatewayProtocol.ResolveIncidentRequest)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 6354
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void MergeFrom(ResolveIncidentRequest other)
    parameters:
    - id: other
      type: GatewayProtocol.ResolveIncidentRequest
    content.vb: Public Sub MergeFrom(other As ResolveIncidentRequest)
  overload: GatewayProtocol.ResolveIncidentRequest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GatewayProtocol.ResolveIncidentRequest.MergeFrom(pb.CodedInputStream)
  commentId: M:GatewayProtocol.ResolveIncidentRequest.MergeFrom(pb.CodedInputStream)
  id: MergeFrom(pb.CodedInputStream)
  parent: GatewayProtocol.ResolveIncidentRequest
  langs:
  - csharp
  - vb
  name: MergeFrom(pb.CodedInputStream)
  nameWithType: ResolveIncidentRequest.MergeFrom(pb.CodedInputStream)
  fullName: GatewayProtocol.ResolveIncidentRequest.MergeFrom(pb.CodedInputStream)
  type: Method
  source:
    id: MergeFrom
    path: ''
    startLine: 6365
  assemblies:
  - cs.temp.dll
  namespace: GatewayProtocol
  syntax:
    content: public void MergeFrom(pb.CodedInputStream input)
    parameters:
    - id: input
      type: pb.CodedInputStream
    content.vb: Public Sub MergeFrom(input As pb.CodedInputStream)
  overload: GatewayProtocol.ResolveIncidentRequest.MergeFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GatewayProtocol
  commentId: N:GatewayProtocol
  name: GatewayProtocol
  nameWithType: GatewayProtocol
  fullName: GatewayProtocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GatewayProtocol.ResolveIncidentRequest.Parser*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.Parser
  name: Parser
  nameWithType: ResolveIncidentRequest.Parser
  fullName: GatewayProtocol.ResolveIncidentRequest.Parser
- uid: pb.MessageParser{GatewayProtocol.ResolveIncidentRequest}
  commentId: '!:pb.MessageParser{GatewayProtocol.ResolveIncidentRequest}'
  definition: pb.MessageParser`1
  name: pb.MessageParser<ResolveIncidentRequest>
  nameWithType: pb.MessageParser<ResolveIncidentRequest>
  fullName: pb.MessageParser<GatewayProtocol.ResolveIncidentRequest>
  nameWithType.vb: pb.MessageParser(Of ResolveIncidentRequest)
  fullName.vb: pb.MessageParser(Of GatewayProtocol.ResolveIncidentRequest)
  name.vb: pb.MessageParser(Of ResolveIncidentRequest)
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GatewayProtocol.ResolveIncidentRequest
    name: ResolveIncidentRequest
    nameWithType: ResolveIncidentRequest
    fullName: GatewayProtocol.ResolveIncidentRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: pb.MessageParser`1
  isExternal: true
  name: pb.MessageParser<>
  nameWithType: pb.MessageParser<>
  fullName: pb.MessageParser<>
  nameWithType.vb: pb.MessageParser(Of )
  fullName.vb: pb.MessageParser(Of )
  name.vb: pb.MessageParser(Of )
  spec.csharp:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: pb.MessageParser`1
    name: pb.MessageParser
    nameWithType: pb.MessageParser
    fullName: pb.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: GatewayProtocol.ResolveIncidentRequest.Descriptor*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.Descriptor
  name: Descriptor
  nameWithType: ResolveIncidentRequest.Descriptor
  fullName: GatewayProtocol.ResolveIncidentRequest.Descriptor
- uid: pbr.MessageDescriptor
  isExternal: true
  name: pbr.MessageDescriptor
  nameWithType: pbr.MessageDescriptor
  fullName: pbr.MessageDescriptor
- uid: GatewayProtocol.ResolveIncidentRequest.#ctor*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.#ctor
  name: ResolveIncidentRequest
  nameWithType: ResolveIncidentRequest.ResolveIncidentRequest
  fullName: GatewayProtocol.ResolveIncidentRequest.ResolveIncidentRequest
- uid: GatewayProtocol.ResolveIncidentRequest
  commentId: T:GatewayProtocol.ResolveIncidentRequest
  parent: GatewayProtocol
  name: ResolveIncidentRequest
  nameWithType: ResolveIncidentRequest
  fullName: GatewayProtocol.ResolveIncidentRequest
- uid: GatewayProtocol.ResolveIncidentRequest.Clone*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.Clone
  name: Clone
  nameWithType: ResolveIncidentRequest.Clone
  fullName: GatewayProtocol.ResolveIncidentRequest.Clone
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GatewayProtocol.ResolveIncidentRequest.IncidentKey*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.IncidentKey
  name: IncidentKey
  nameWithType: ResolveIncidentRequest.IncidentKey
  fullName: GatewayProtocol.ResolveIncidentRequest.IncidentKey
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: GatewayProtocol.ResolveIncidentRequest.Equals*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.Equals
  name: Equals
  nameWithType: ResolveIncidentRequest.Equals
  fullName: GatewayProtocol.ResolveIncidentRequest.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GatewayProtocol.ResolveIncidentRequest.GetHashCode*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.GetHashCode
  name: GetHashCode
  nameWithType: ResolveIncidentRequest.GetHashCode
  fullName: GatewayProtocol.ResolveIncidentRequest.GetHashCode
- uid: GatewayProtocol.ResolveIncidentRequest.ToString*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.ToString
  name: ToString
  nameWithType: ResolveIncidentRequest.ToString
  fullName: GatewayProtocol.ResolveIncidentRequest.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GatewayProtocol.ResolveIncidentRequest.WriteTo*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.WriteTo
  name: WriteTo
  nameWithType: ResolveIncidentRequest.WriteTo
  fullName: GatewayProtocol.ResolveIncidentRequest.WriteTo
- uid: pb.CodedOutputStream
  isExternal: true
  name: pb.CodedOutputStream
  nameWithType: pb.CodedOutputStream
  fullName: pb.CodedOutputStream
- uid: GatewayProtocol.ResolveIncidentRequest.CalculateSize*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.CalculateSize
  name: CalculateSize
  nameWithType: ResolveIncidentRequest.CalculateSize
  fullName: GatewayProtocol.ResolveIncidentRequest.CalculateSize
- uid: GatewayProtocol.ResolveIncidentRequest.MergeFrom*
  commentId: Overload:GatewayProtocol.ResolveIncidentRequest.MergeFrom
  name: MergeFrom
  nameWithType: ResolveIncidentRequest.MergeFrom
  fullName: GatewayProtocol.ResolveIncidentRequest.MergeFrom
- uid: pb.CodedInputStream
  isExternal: true
  name: pb.CodedInputStream
  nameWithType: pb.CodedInputStream
  fullName: pb.CodedInputStream
